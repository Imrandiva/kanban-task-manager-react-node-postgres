{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component, useEffect } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.getMerchant = () => {\n      this.setState({\n        tasks: this.state.tasks\n      });\n      fetch('http://localhost:3001').then(response => {\n        // alert(response.text());\n        return response.text();\n      }).then(data => {\n        const obj = JSON.parse(data);\n\n        for (let i = 0; i < Object.keys(obj).length; i++) {\n          this.state.tasks.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: 0\n          }); // alert(obj[i].tid);\n        }\n\n        ;\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      // Find id where name is part of id\n      let _tasks = this.state.tasks;\n      let idToDelete;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        if (_tasks[i].name = name) {\n          idToDelete = _tasks[i].tid;\n\n          _tasks.splice(i, 1);\n\n          this.deleteMerchant(idToDelete);\n          this.setState({\n            tasks: _tasks\n          });\n        }\n      }\n\n      ;\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date()\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.getMerchant();\n  }\n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date\n      })\n    }).then(response => {\n      return response.text();\n    });\n    this.setState({\n      tasks: this.state.tasks\n    }); // window.location.reload();\n    //     .then(data => {\n    //       alert(data);\n    //       this.getMerchant();\n    //     });\n  }\n\n  deleteMerchant(id) {\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      this.getMerchant();\n    }); // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }, \"Create task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.course.split(' ').join('-')}-course`,\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.chosenDate.split(' ').join('-')}-date`,\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 27\n          }\n        }, task.chosenDate))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","useEffect","InfiniteCalendar","KanbanBoard","constructor","getMerchant","setState","tasks","state","fetch","then","response","text","data","obj","JSON","parse","i","Object","keys","length","push","tid","name","task_name","course","chosenDate","due_date","stage","onInputChange","e","inputValue","target","value","onCourseInputChange","courseInput","addTask","_tasks","createMerchant","dateInput","enterAddTask","key","back","map","task","forward","remove","idToDelete","splice","deleteMerchant","calendarDate","Date","stagesNames","handleChange","bind","onFormSubmit","method","headers","body","stringify","id","alert","date","toISOString","split","toString","preventDefault","console","log","render","stagesTasks","stageId","weekStartsOn","layout","index","join"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAO,oCAAP;AAIA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACjDI,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;;AAHY,SAwBdC,WAxBc,GAwBA,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAApB,OAAd;AAEAE,MAAAA,KAAK,CAAC,uBAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAI;AAChB;AACA,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAJH,EAKGF,IALH,CAKQG,IAAI,IAAI;AACZ,cAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;;AACA,aAAK,IAAII,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAZ,EAAiBM,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAE/C,eAAKT,KAAL,CAAWD,KAAX,CAAiBc,IAAjB,CAAsB;AACpBC,YAAAA,GAAG,EAAER,GAAG,CAACG,CAAD,CAAH,CAAOK,GADQ;AAEpBC,YAAAA,IAAI,EAAET,GAAG,CAACG,CAAD,CAAH,CAAOO,SAFO;AAGpBC,YAAAA,MAAM,EAAEX,GAAG,CAACG,CAAD,CAAH,CAAOQ,MAHK;AAIpBC,YAAAA,UAAU,EAAEZ,GAAG,CAACG,CAAD,CAAH,CAAOU,QAJC;AAKpBC,YAAAA,KAAK,EAAE;AALa,WAAtB,EAF+C,CAUjD;AAEL;;AAAA;AAEI,OArBH;AAsBD,KAjDa;;AAAA,SA2GdC,aA3Gc,GA2GGC,CAAD,IAAO;AACrB,WAAKxB,QAAL,CAAc;AACZyB,QAAAA,UAAU,EAAED,CAAC,CAACE,MAAF,CAASC;AADT,OAAd;AAGD,KA/Ga;;AAAA,SAiHdC,mBAjHc,GAiHSJ,CAAD,IAAO;AAC3B,WAAKxB,QAAL,CAAc;AACZ6B,QAAAA,WAAW,EAAEL,CAAC,CAACE,MAAF,CAASC;AADV,OAAd;AAGD,KArHa;;AAAA,SAsHdG,OAtHc,GAsHJ,MAAM;AACd,UAAI,KAAK5B,KAAL,CAAWuB,UAAf,EAA2B;AACzB,cAAMM,MAAM,GAAG,KAAK7B,KAAL,CAAWD,KAA1B;AACA,aAAK+B,cAAL,CAAoB,KAAK9B,KAAL,CAAWuB,UAA/B,EAA2C,KAAKvB,KAAL,CAAW2B,WAAtD,EAAmE,KAAK3B,KAAL,CAAW+B,SAA9E;;AACAF,QAAAA,MAAM,CAAChB,IAAP,CAAY;AAAEE,UAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWuB,UAAnB;AAA+BN,UAAAA,MAAM,EAAE,KAAKjB,KAAL,CAAW2B,WAAlD;AAA+DT,UAAAA,UAAU,EAAE,KAAKlB,KAAL,CAAW+B,SAAtF;AAAkGX,UAAAA,KAAK,EAAE;AAAzG,SAAZ;;AAGA,aAAKtB,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE8B,MAAT;AAAiBN,UAAAA,UAAU,EAAC;AAA5B,SAAd;AACA,aAAKzB,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE8B,MAAT;AAAiBF,UAAAA,WAAW,EAAC;AAA7B,SAAd;AACA,aAAK7B,QAAL,CAAc;AAAEC,UAAAA,KAAK,EAAE8B,MAAT;AAAiBE,UAAAA,SAAS,EAAC;AAA3B,SAAd;AACD;AAEF,KAlIa;;AAAA,SAoIdC,YApIc,GAoIEV,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACW,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAKL,OAAL;AACD;AACF,KAxIa;;AAAA,SA0IdM,IA1Ic,GA0INnB,IAAD,IAAU;AACf,UAAIc,MAAM,GAAG,KAAK7B,KAAL,CAAWD,KAAxB;AACA8B,MAAAA,MAAM,GAAGA,MAAM,CAACM,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAACrB,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAAEA,UAAAA,IAAI,EAAEqB,IAAI,CAACrB,IAAb;AAAmBE,UAAAA,MAAM,EAAEmB,IAAI,CAACnB,MAAhC;AAAwCC,UAAAA,UAAU,EAAEkB,IAAI,CAAClB,UAAzD;AAAqEE,UAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsBgB,IAAI,CAAChB,KAAL,GAAa;AAA/G,SAAP,CAAvB,KACK,OAAOgB,IAAP;AACN,OAHQ,CAAT;AAKA,WAAKtC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE8B;AAAT,OAAd;AACD,KAlJa;;AAAA,SAoJdQ,OApJc,GAoJHtB,IAAD,IAAU;AAClB,UAAIc,MAAM,GAAG,KAAK7B,KAAL,CAAWD,KAAxB;AACA8B,MAAAA,MAAM,GAAGA,MAAM,CAACM,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAACrB,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAAEA,UAAAA,IAAI,EAAEqB,IAAI,CAACrB,IAAb;AAAmBE,UAAAA,MAAM,EAAEmB,IAAI,CAACnB,MAAhC;AAAuCC,UAAAA,UAAU,EAAEkB,IAAI,CAAClB,UAAxD;AAAoEE,UAAAA,KAAK,EAAEgB,IAAI,CAAChB,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsBgB,IAAI,CAAChB,KAAL,GAAa;AAA9G,SAAP,CAAvB,KACK,OAAOgB,IAAP;AACN,OAHQ,CAAT;AAKA,WAAKtC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAE8B;AAAT,OAAd;AACD,KA5Ja;;AAAA,SA8JdS,MA9Jc,GA8JJvB,IAAD,IAAU;AAChB;AACA,UAAIc,MAAM,GAAG,KAAK7B,KAAL,CAAWD,KAAxB;AACA,UAAIwC,UAAJ;;AACA,WAAK,IAAI9B,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYkB,MAAZ,EAAoBjB,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AACnD,YAAIoB,MAAM,CAACpB,CAAD,CAAN,CAAUM,IAAV,GAAiBA,IAArB,EAA2B;AACzBwB,UAAAA,UAAU,GAAGV,MAAM,CAACpB,CAAD,CAAN,CAAUK,GAAvB;;AACAe,UAAAA,MAAM,CAACW,MAAP,CAAc/B,CAAd,EAAiB,CAAjB;;AACC,eAAKgC,cAAL,CAAoBF,UAApB;AACA,eAAKzC,QAAL,CAAc;AAAEC,YAAAA,KAAK,EAAE8B;AAAT,WAAd;AAGF;AAEH;;AAAA;AAMD,KAlLa;;AAKZ,SAAK7B,KAAL,GAAa;AAEXD,MAAAA,KAAK,EAAE,EAFI;AAGXwB,MAAAA,UAAU,EAAE,EAHD;AAIXI,MAAAA,WAAW,EAAE,EAJF;AAKXI,MAAAA,SAAS,EAAE,EALA;AAMXW,MAAAA,YAAY,EAAE,IAAIC,IAAJ;AANH,KAAb;AAWA,SAAKC,WAAL,GAAmB,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAA+B,QAA/B,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKjD,WAAL;AAGD;;AA+BDiC,EAAAA,cAAc,CAACf,IAAD,EAAOE,MAAP,EAAeE,QAAf,EAAyB;AACrC;AACA;AACA;AACAlB,IAAAA,KAAK,CAAC,6BAAD,EAAgC;AACnC+C,MAAAA,MAAM,EAAE,MAD2B;AAEnCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF0B;AAKnCC,MAAAA,IAAI,EAAE3C,IAAI,CAAC4C,SAAL,CAAe;AAACpC,QAAAA,IAAD;AAAOE,QAAAA,MAAP;AAAeE,QAAAA;AAAf,OAAf;AAL6B,KAAhC,CAAL,CAOGjB,IAPH,CAOQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATH;AAUE,SAAKN,QAAL,CAAc;AAAEC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAApB,KAAd,EAdmC,CAgBnC;AAGJ;AACA;AACA;AACA;AACC;;AAEC0C,EAAAA,cAAc,CAACW,EAAD,EAAK;AAEnBnD,IAAAA,KAAK,CAAE,+BAA8BmD,EAAG,EAAnC,EAAsC;AACzCJ,MAAAA,MAAM,EAAE;AADiC,KAAtC,CAAL,CAGG9C,IAHH,CAGQC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALH,EAMGF,IANH,CAMQG,IAAI,IAAI;AACZgD,MAAAA,KAAK,CAAChD,IAAD,CAAL;AACA,WAAKR,WAAL;AACD,KATH,EAFmB,CAajB;AACH;;AAEDgD,EAAAA,YAAY,CAACS,IAAD,EAAO;AACjB,SAAKxD,QAAL,CAAc;AACZ4C,MAAAA,YAAY,EAAEY,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CADF;AAEZzB,MAAAA,SAAS,EAAEuB,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCC,QAAjC;AAFC,KAAd;AAKD;;AAEDV,EAAAA,YAAY,CAACzB,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACoC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK5D,KAAL,CAAWkB,UAAvB;AACD;;AA2ED2C,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9D,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,QAAI8D,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKmC,WAAL,CAAiBhC,MAArC,EAA6CH,CAAC,EAA9C,EAAkD;AAChDqD,MAAAA,WAAW,CAACjD,IAAZ,CAAiB,EAAjB;AACD;;AACD,SAAK,IAAIuB,IAAT,IAAiBrC,KAAjB,EAAwB;AACtB,YAAMgE,OAAO,GAAG3B,IAAI,CAAChB,KAArB;AACA0C,MAAAA,WAAW,CAACC,OAAD,CAAX,CAAqBlD,IAArB,CAA0BuB,IAA1B;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAEE,MAAA,QAAQ,EAAG,KAAKpC,KAAL,CAAW0C,YAFxB;AAGE,MAAA,QAAQ,EAAG,KAAKG,YAHlB;AAIE,MAAA,MAAM,EAAE;AACRmB,QAAAA,YAAY,EAAE;AADN,OAJV;AAME,MAAA,cAAc,EAAE;AAChBC,QAAAA,MAAM,EAAE;AADQ,OANlB;AASE,MAAA,KAAK,EAAE,GATT;AAUE,MAAA,MAAM,EAAE,GAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAeG;AAAS,MAAA,SAAS,EAAC,4DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,KAAK,EAAE,KAAKjE,KAAL,CAAWuB,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKF,aAApD;AAAmE,MAAA,SAAS,EAAE,KAAKW,YAAnF;AAAiG,MAAA,EAAE,EAAC,mBAApG;AAAwH,MAAA,IAAI,EAAC,MAA7H;AAAoI,MAAA,SAAS,EAAC,OAA9I;AAAsJ,MAAA,WAAW,EAAC,eAAlK;AAAkL,qBAAY,mBAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAO,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAW2B,WAAzB;AAAsC,MAAA,QAAQ,EAAE,KAAKD,mBAArD;AAA0E,MAAA,SAAS,EAAE,KAAKM,YAA1F;AAAwG,MAAA,EAAE,EAAC,mBAA3G;AAA+H,MAAA,IAAI,EAAC,MAApI;AAA2I,MAAA,SAAS,EAAC,OAArJ;AAA6J,MAAA,WAAW,EAAC,aAAzK;AAAuL,qBAAY,mBAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAO,MAAA,KAAK,EAAE,KAAKhC,KAAL,CAAW+B,SAAzB;AAAoC,MAAA,SAAS,EAAE,KAAKC,YAApD;AAAkE,MAAA,EAAE,EAAC,mBAArE;AAAyF,MAAA,IAAI,EAAC,MAA9F;AAAqG,MAAA,SAAS,EAAC,OAA/G;AAAuH,MAAA,WAAW,EAAC,eAAnI;AAAmJ,qBAAY,mBAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAMC;AAAQ,MAAA,OAAO,EAAE,KAAKJ,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,SAAS,EAAC,YAAvD;AAAoE,qBAAY,oBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAND,CAfH,eAwBE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkC,WAAW,CAAC3B,GAAZ,CAAgB,CAACpC,KAAD,EAAQU,CAAR,KAAc;AAC7B,0BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,GAAG,EAAG,GAAEA,CAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKmC,WAAL,CAAiBnC,CAAjB,CAAL,CADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,uBAAc,SAAQA,CAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,KAAK,CAACoC,GAAN,CAAU,CAACC,IAAD,EAAO8B,KAAP,KAAiB;AAC1B,4BAAO;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAiC,UAAA,GAAG,EAAG,GAAEzD,CAAE,GAAEyD,KAAM,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACL;AAAK,UAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAS,UAAA,SAAS,EAAC,gEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,yBAAc,GAAE9B,IAAI,CAACrB,IAAL,CAAUyC,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8D/B,IAAI,CAACrB,IAAnE,CADF,eAEE;AAAS,UAAA,SAAS,EAAC,6DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAM,yBAAc,GAAEqB,IAAI,CAACnB,MAAL,CAAYuC,KAAZ,CAAkB,GAAlB,EAAuBW,IAAvB,CAA4B,GAA5B,CAAiC,SAAvD;AAAiE,UAAA,SAAS,EAAC,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuF/B,IAAI,CAACnB,MAA5F,CADA,eAEA;AAAM,yBAAc,GAAEmB,IAAI,CAAClB,UAAL,CAAgBsC,KAAhB,CAAsB,GAAtB,EAA2BW,IAA3B,CAAgC,GAAhC,CAAqC,OAA3D;AAAmE,UAAA,SAAS,EAAC,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0F/B,IAAI,CAAClB,UAA/F,CAFA,CAFF,CADA,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKgB,IAAL,CAAUE,IAAI,CAACrB,IAAf,CAAvB;AAA6C,UAAA,SAAS,EAAC,sBAAvD;AAA8E,yBAAc,GAAEqB,IAAI,CAACrB,IAAL,CAAUyC,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,OAA7H;AAAqI,UAAA,QAAQ,EAAE/B,IAAI,CAAChB,KAAL,IAAc,CAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKiB,OAAL,CAAaD,IAAI,CAACrB,IAAlB,CAAvB;AAAgD,UAAA,SAAS,EAAC,sBAA1D;AAAiF,yBAAc,GAAEqB,IAAI,CAACrB,IAAL,CAAUyC,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,UAAhI;AAA2I,UAAA,QAAQ,EAAE/B,IAAI,CAAChB,KAAL,IAAc,CAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CAJF,eAOE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKkB,MAAL,CAAYF,IAAI,CAACrB,IAAjB,CAAvB;AAA+C,UAAA,SAAS,EAAC,uBAAzD;AAAiF,yBAAc,GAAEqB,IAAI,CAACrB,IAAL,CAAUyC,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,SAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAPF,CARF,CADK,CAAP;AAsBD,OAvBA,CADH,CAFF,CADF,CADF;AAiCD,KAlCA,CADH,CAxBF,CADF;AAiED;;AAjQgD","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      \n\n      \n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.getMerchant();\n    \n    \n  }\n\n  getMerchant = () => {\n    this.setState({ tasks: this.state.tasks });\n\n    fetch('http://localhost:3001')\n      .then(response => {\n        // alert(response.text());\n        return response.text();\n      })\n      .then(data => { \n        const obj = JSON.parse(data);\n        for (let i =0; i < Object.keys(obj).length; i++) {\n            \n          this.state.tasks.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: 0,\n\n          }); \n        // alert(obj[i].tid);\n      \n  };\n        \n      });\n  }\n  \n  \n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      this.setState({ tasks: this.state.tasks });\n\n      // window.location.reload();\n\n      \n  //     .then(data => {\n  //       alert(data);\n  //       this.getMerchant();\n  //     });\n  }\n\n    deleteMerchant(id) {\n      \n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        this.getMerchant();\n      });\n\n      // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    })\n     \n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course, chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage - 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage + 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n     // Find id where name is part of id\n     let _tasks = this.state.tasks;\n     let idToDelete;\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n      if (_tasks[i].name = name) {\n        idToDelete = _tasks[i].tid;\n        _tasks.splice(i, 1);\n         this.deleteMerchant(idToDelete);\n         this.setState({ tasks: _tasks });\n\n         \n      }\n     \n   };\n   \n    \n\n   \n    \n  }\n\n  render() {\n    const { tasks } = this.state;\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Create task</button>\n          {/* <button  onClick={this.getMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button> */}\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span data-testid={`${task.course.split(' ').join('-')}-course`} className=\"taskIcon\">{task.course}</span>\n                          <span data-testid={`${task.chosenDate.split(' ').join('-')}-date`} className=\"taskIcon2\">{task.chosenDate}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}