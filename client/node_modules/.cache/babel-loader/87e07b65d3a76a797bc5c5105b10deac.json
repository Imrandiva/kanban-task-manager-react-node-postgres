{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/card/card.js\";\nimport React, { Component } from 'react';\nimport './styles.css';\nimport { Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nexport default class WeatherCard extends Component {\n  constructor() {\n    super();\n\n    this.getData = () => {\n      return fetch('https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/18.1489/lat/57.3081/data.json').then(response => {\n        // alert(response.tid);\n        return response.json();\n      });\n    };\n\n    this.getData2 = () => {\n      const https = require('https');\n\n      let url = \"https://dailyprayer.abdulrcs.repl.co/api/singapore\";\n      https.get(url, res => {\n        let body = \"\";\n        res.on(\"data\", chunk => {\n          body += chunk;\n        });\n        res.on(\"end\", () => {\n          try {\n            let json = JSON.parse(body);\n            console.log(json[\"city\"]);\n            console.log(json[\"date\"]);\n\n            for (prayer in json[\"today\"]) console.log(prayer + \": \" + json[\"today\"][prayer]);\n          } catch (error) {\n            console.error(error.message);\n          }\n\n          ;\n        });\n      }).on(\"error\", error => {\n        console.error(error.message);\n      });\n    };\n\n    this.refresh = () => {\n      window.location.reload();\n    };\n\n    this.weatherTable = text => {\n      console.log(text.timeSeries[0].validTime);\n      console.log(text.timeSeries[0].parameters[10].values);\n      let weatherinfo = [];\n      const temp = text.timeSeries[0].parameters[10].values;\n      weatherinfo.push(temp);\n      this.setState({\n        weatherData: weatherinfo\n      });\n    };\n\n    this.prayerData = text => {\n      this.setState({\n        prayerTimes: text\n      });\n      console.log(text);\n    };\n\n    this.state = {\n      weatherData: [],\n      prayerTimes: []\n    };\n    this.getData().then(this.weatherTable);\n    this.getData2().then(this.prayerData);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-row justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, \"Prayer times in Stockholm\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      inverted: true,\n      color: \"blue\",\n      circular: true,\n      icon: \"refresh\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"Fajr: \", this.state.prayerTimes.Fajr, \"\\xB0C \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"Zuhr: \", this.state.weatherData[0], \"\\xB0C \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"Asr: \", this.state.weatherData[0], \"\\xB0C \"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"Maghreb: \", this.state.weatherData[0], \"\\xB0C \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Isha: \", this.state.weatherData[0], \"\\xB0C \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, \"Weather in Stockholm right now\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"button\",\n      inverted: true,\n      color: \"blue\",\n      circular: true,\n      icon: \"refresh\",\n      onClick: this.refresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Temprature: \", this.state.weatherData[0], \"\\xB0C \"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/card/card.js"],"names":["React","Component","Button","WeatherCard","constructor","getData","fetch","then","response","json","getData2","https","require","url","get","res","body","on","chunk","JSON","parse","console","log","prayer","error","message","refresh","window","location","reload","weatherTable","text","timeSeries","validTime","parameters","values","weatherinfo","temp","push","setState","weatherData","prayerData","prayerTimes","state","render","Fajr"],"mappings":"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","sourcesContent":["import React,{Component }  from 'react';\nimport './styles.css';\nimport { Button } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css'\n\nexport default class WeatherCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n    weatherData: [],\n    prayerTimes: [],\n    \n    }\n    this.getData().then(this.weatherTable);\n    this.getData2().then(this.prayerData);\n\n  }\n\n\ngetData = () => {\n  return fetch('https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/18.1489/lat/57.3081/data.json')\n  .then(response => {\n    // alert(response.tid);\n    return response.json();\n  })\n\n}\n\ngetData2 = () => {\n  const https = require('https');\nlet url = \"https://dailyprayer.abdulrcs.repl.co/api/singapore\";\n\nhttps.get(url,(res) => {\n    let body = \"\";\n\n    res.on(\"data\", (chunk) => {\n        body += chunk;\n    });\n\n    res.on(\"end\", () => {\n        try {\n            let json = JSON.parse(body);\n            console.log(json[\"city\"])\n            console.log(json[\"date\"])\n            for(prayer in json[\"today\"])\n              console.log(prayer + \": \" + json[\"today\"][prayer])\n        } catch (error) {\n            console.error(error.message);\n        };\n    });\n\n}).on(\"error\", (error) => {\n    console.error(error.message);\n});\n}\nrefresh = () => {\n\n  window.location.reload();\n\n}\nweatherTable = (text) =>  {\n  console.log(text.timeSeries[0].validTime);\nconsole.log(text.timeSeries[0].parameters[10].values); \nlet weatherinfo = [];\nconst temp = text.timeSeries[0].parameters[10].values;\nweatherinfo.push(temp);\nthis.setState({ weatherData: weatherinfo });\n\n}\n\nprayerData = (text) =>  {\n  this.setState({ prayerTimes: text });\n  console.log(text);\n}\n\nrender() {\n\n  return (\n    <div className=\"mt-20 layout-row justify-content-center align-items-center\">\n  <div className=\"main\">\n      <div className=\"top\">\n        <p className=\"header\">Prayer times in Stockholm</p>\n        <Button className=\"button\" inverted color='blue' circular icon='refresh' onClick={this.refresh} />\n      </div>\n      <div className=\"flex\">\n        <p className=\"temp\">Fajr: {this.state.prayerTimes.Fajr}°C </p>\n        <p className=\"temp\">Zuhr: {this.state.weatherData[0]}°C </p>\n\n      </div>\n\n      <div className=\"flex\">\n        <p className=\"temp\">Asr: {this.state.weatherData[0]}°C </p>\n        <p className=\"temp\">Maghreb: {this.state.weatherData[0]}°C </p>\n\n      </div>\n\n      <div className=\"flex\">\n        <p className=\"temp\">Isha: {this.state.weatherData[0]}°C </p>\n      </div>\n    </div>\n\n\n    <div className=\"main\">\n      <div className=\"top\">\n        <p className=\"header\">Weather in Stockholm right now</p>\n        <Button className=\"button\" inverted color='blue' circular icon='refresh' onClick={this.refresh} />\n      </div>\n      \n\n      <div className=\"flex\">\n        <p className=\"temp\">Temprature: {this.state.weatherData[0]}°C </p>\n      </div>\n\n    </div>\n  </div>\n\n\n  )\n  }\n}\n  \n\n\n"]},"metadata":{},"sourceType":"module"}