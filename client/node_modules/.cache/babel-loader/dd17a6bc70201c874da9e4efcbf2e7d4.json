{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'; // import createMerchant from './caller.js';\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.filter(e => e.name != name);\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      setMerchants: useState(false)\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this); // const [merchants, setMerchants] = useState(false);\n    //   var myData =  require('./tasks.json');\n    //     for (let i =0; i < Object.keys(myData.all_tasks).length; i++) {\n    //       var values = [];\n    //       for (const [key, value] of Object.entries(myData.all_tasks[i])) {\n    //           values.push(value);\n    //       }           \n    //         this.state.tasks.push({\n    //           name: values[0],\n    //           course: values[1],\n    //           chosenDate: values[2],\n    //           stage: values[3],\n    //       }); \n    // };\n  }\n\n  getMerchant() {\n    fetch('http://localhost:3001').then(response => {\n      return response.text();\n    }).then(data => {\n      setMerchants(data);\n    });\n  }\n\n  useThisEffect() {\n    useEffect(() => {\n      getMerchant();\n    }, []);\n  }\n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      this.getMerchant();\n    });\n  }\n\n  deleteMerchant() {\n    let id = prompt('Enter task id');\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      this.getMerchant();\n    });\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toLocaleDateString(\"sv-SE\"),\n      dateInput: date.toLocaleDateString(\"sv-SE\").toString()\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  // deleteTask = () => {\n  //   ;\n  // }\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"ml-30\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, \"Create task\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deleteMerchant,\n      type: \"submit\",\n      className: \"save-progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }, \"Delete a task \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.course.split(' ').join('-')}-course`,\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.chosenDate.split(' ').join('-')}-date`,\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 27\n          }\n        }, task.chosenDate))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","InfiniteCalendar","KanbanBoard","constructor","onInputChange","e","setState","inputValue","target","value","onCourseInputChange","courseInput","addTask","state","_tasks","tasks","createMerchant","dateInput","push","name","course","chosenDate","stage","enterAddTask","key","back","map","task","forward","remove","filter","calendarDate","Date","setMerchants","useState","stagesNames","handleChange","bind","onFormSubmit","getMerchant","fetch","then","response","text","data","useThisEffect","useEffect","due_date","method","headers","body","JSON","stringify","alert","deleteMerchant","id","prompt","date","toLocaleDateString","toString","preventDefault","console","log","render","stagesTasks","i","length","stageId","weekStartsOn","layout","index","split","join"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n// import createMerchant from './caller.js';\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      setMerchants: useState(false)\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    // const [merchants, setMerchants] = useState(false);\n    \n\n    \n  //   var myData =  require('./tasks.json');\n  //     for (let i =0; i < Object.keys(myData.all_tasks).length; i++) {\n  //       var values = [];\n  //       for (const [key, value] of Object.entries(myData.all_tasks[i])) {\n  //           values.push(value);\n  //       }           \n  //         this.state.tasks.push({\n  //           name: values[0],\n  //           course: values[1],\n  //           chosenDate: values[2],\n  //           stage: values[3],\n\n  //       }); \n      \n  // };\n    \n  }\n\n  getMerchant() {\n    fetch('http://localhost:3001')\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {  \n        setMerchants(data)\n      });\n  }\n  \n  useThisEffect() {\n  useEffect(() => {\n    getMerchant();\n     }, []);\n    }\n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        this.getMerchant();\n      });\n  }\n\n    deleteMerchant() {\n    let id = prompt('Enter task id');\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        this.getMerchant();\n      });\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toLocaleDateString(\"sv-SE\"),\n      dateInput: date.toLocaleDateString(\"sv-SE\").toString()\n    })\n     \n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n\n  // onDateInputChange = (e) => {\n  //   this.setState({\n  //     dateInput: e.target.value\n  //   })\n  // }\n  //  createMerchant = () => {\n  //   let name = this.state.inputValue;\n  //   let course = this.state.courseInput;\n  //   let due_date = this.state.dateInput;\n  //   fetch('http://localhost:3001/tasks', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({name, course, due_date}),\n  //   })\n  //     .then(response => {\n  //       return response.text();\n  //     })\n    \n  // }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course, chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage - 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage + 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.filter(e => e.name != name);\n    this.setState({ tasks: _tasks });\n  }\n\n  // deleteTask = () => {\n  //   ;\n\n    \n  // }\n\n\n  render() {\n    const { tasks } = this.state;\n    \n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"ml-30\" data-testid=\"create-task-button\">Create task</button>\n          <button  onClick={this.deleteMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button>\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span data-testid={`${task.course.split(' ').join('-')}-course`} className=\"taskIcon\">{task.course}</span>\n                          <span data-testid={`${task.chosenDate.split(' ').join('-')}-date`} className=\"taskIcon2\">{task.chosenDate}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}