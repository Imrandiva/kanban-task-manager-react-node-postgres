{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component, useEffect } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.getMerchant = () => {\n      fetch('http://localhost:3001').then(response => {\n        // alert(response.text());\n        return response.text();\n      }).then(data => {\n        const obj = JSON.parse(data);\n\n        for (let i = 0; i < Object.keys(obj).length; i++) {\n          this.state.tasks.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: 0\n          }); // alert(obj[i].tid);\n        }\n\n        ;\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n        var today = new Date();\n        var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n        this.setState({\n          dateInput: date\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      // Find id where name is part of id\n      let _tasks = this.state.tasks;\n      let idToDelete;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        if (_tasks[i].name = name) {\n          idToDelete = _tasks[i].tid;\n\n          _tasks.splice(i, 1);\n\n          this.deleteMerchant(idToDelete);\n          this.setState({\n            tasks: _tasks\n          });\n        }\n      }\n\n      ;\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date()\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.getMerchant();\n  }\n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date\n      })\n    }).then(response => {\n      return response.text();\n    });\n    this.setState({\n      tasks: this.state.tasks\n    });\n    window.location.reload(); //     .then(data => {\n    //       alert(data);\n    //       this.getMerchant();\n    //     });\n  }\n\n  deleteMerchant(id) {\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      // alert(data);\n      this.getMerchant();\n    });\n    window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, \"Create task\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.course.split(' ').join('-')}-course`,\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.chosenDate.split(' ').join('-')}-date`,\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 27\n          }\n        }, task.chosenDate))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","useEffect","InfiniteCalendar","KanbanBoard","constructor","getMerchant","fetch","then","response","text","data","obj","JSON","parse","i","Object","keys","length","state","tasks","push","tid","name","task_name","course","chosenDate","due_date","stage","onInputChange","e","setState","inputValue","target","value","onCourseInputChange","courseInput","addTask","_tasks","createMerchant","dateInput","today","Date","date","getFullYear","getMonth","getDate","enterAddTask","key","back","map","task","forward","remove","idToDelete","splice","deleteMerchant","calendarDate","stagesNames","handleChange","bind","onFormSubmit","method","headers","body","stringify","window","location","reload","id","toISOString","split","toString","preventDefault","console","log","render","stagesTasks","stageId","weekStartsOn","layout","index","join"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      \n\n      \n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.getMerchant();\n   \n    \n  }\n\n  getMerchant = () => {\n    fetch('http://localhost:3001')\n      .then(response => {\n        // alert(response.text());\n        return response.text();\n      })\n      .then(data => { \n        const obj = JSON.parse(data);\n        for (let i =0; i < Object.keys(obj).length; i++) {\n            \n          this.state.tasks.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: 0,\n\n          }); \n        // alert(obj[i].tid);\n      \n  };\n        \n      });\n  }\n  \n  \n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      this.setState({ tasks: this.state.tasks });\n\n      window.location.reload();\n    \n      \n      \n  //     .then(data => {\n  //       alert(data);\n  //       this.getMerchant();\n  //     });\n  }\n\n    deleteMerchant(id) {\n      \n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        // alert(data);\n        this.getMerchant();\n      });\n\n      window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    })\n     \n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n    \n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n\n      var today = new Date();\n      var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n      this.setState({ dateInput: date });\n      \n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course, chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage - 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage + 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n     // Find id where name is part of id\n     let _tasks = this.state.tasks;\n     let idToDelete;\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n      if (_tasks[i].name = name) {\n        idToDelete = _tasks[i].tid;\n        _tasks.splice(i, 1);\n         this.deleteMerchant(idToDelete);\n         this.setState({ tasks: _tasks });\n\n         \n      }\n     \n   };\n   \n    \n\n   \n    \n  }\n\n  render() {\n    const { tasks } = this.state;\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n   \n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Create task</button>\n          {/* <button  onClick={this.getMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button> */}\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span data-testid={`${task.course.split(' ').join('-')}-course`} className=\"taskIcon\">{task.course}</span>\n                          <span data-testid={`${task.chosenDate.split(' ').join('-')}-date`} className=\"taskIcon2\">{task.chosenDate}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}