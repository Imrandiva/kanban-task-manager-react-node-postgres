{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.onClick = name => {\n      // On click we change our state â€“ this will trigger our `render` method\n      if (this.state.showForm) {\n        this.setState({\n          showForm: false\n        });\n      } else {\n        this.setState({\n          showForm: true\n        });\n      }\n    };\n\n    this.renderForm = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"mt-50 layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"What to change\"), /*#__PURE__*/React.createElement(\"select\", {\n        value: this.state.changeValue,\n        onChange: this.handleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, \"Test\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"test2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }, \"Test\")))), this.state.changeValue, \";\", /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.inputValue,\n        onChange: this.onInputChange,\n        onKeyDown: this.enterAddTask,\n        id: \"create-task-input\",\n        type: \"text\",\n        className: \"large\",\n        placeholder: \"New task name\",\n        \"data-testid\": \"create-task-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 10\n        }\n      }));\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          tid: task.tid,\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          tid: task.tid,\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      // Find id where name is part of id\n      let _tasks = this.state.tasks;\n      let idToDelete = 0;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        if (_tasks[i].name = name) {\n          idToDelete = _tasks[i].tid;\n          console.log(_tasks[i].name);\n          console.log(_tasks[i].tid);\n\n          _tasks.splice(i, 1);\n\n          this.deleteMerchant(idToDelete);\n          this.setState({\n            tasks: _tasks\n          });\n        }\n      }\n\n      ;\n    };\n\n    this.saveProgress = () => {\n      let _tasks = this.state.tasks;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        this.updateStage(_tasks[i].tid, _tasks[i].stage);\n        console.log(_tasks[i].tid);\n        console.log(_tasks[i].name);\n      }\n\n      ;\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      count: 0,\n      changeTask: '',\n      showForm: false,\n      changeValue: 'What to change'\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.getMerchant();\n  }\n\n  async getMerchant() {\n    const datafiles = [];\n    await fetch('http://localhost:3001').then(response => {\n      // alert(response.tid);\n      return response.text();\n    }).then(data => {\n      const obj = JSON.parse(data);\n\n      for (let i = 0; i < Object.keys(obj).length; i++) {\n        datafiles.push({\n          tid: obj[i].tid,\n          name: obj[i].task_name,\n          course: obj[i].course,\n          chosenDate: obj[i].due_date,\n          stage: obj[i].stage\n        }); // alert(obj[i].tid);\n      }\n\n      ;\n      this.setState({\n        tasks: datafiles\n      });\n    });\n  }\n\n  async createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    const stage = 0;\n    await fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date,\n        stage\n      })\n    }).then(response => {\n      return response.text();\n    });\n    this.setState({\n      tasks: this.state.tasks\n    });\n    window.location.reload(); //     .then(data => {\n    //       alert(data);\n    //       this.getMerchant();\n    //     });\n  }\n\n  async updateStage(id, stage) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        stage\n      })\n    }).then(response => {\n      return response.text();\n    }); // .then(data => {\n    //   // alert(data);\n    //   this.getMerchant();\n    // });\n\n    this.setState({\n      tasks: this.state.tasks\n    }); // window.location.reload();\n  }\n\n  async updateTask(id, column, change) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        column,\n        change\n      })\n    }).then(response => {\n      return response.text();\n    }); // .then(data => {\n    //   // alert(data);\n    //   this.getMerchant();\n    // });\n\n    this.setState({\n      tasks: this.state.tasks\n    }); // window.location.reload();\n  } // updateTask = (name) => {\n  // }\n\n\n  async deleteMerchant(id) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      // alert(data);\n      this.getMerchant();\n    }); // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    });\n  }\n\n  handleEdit(event) {\n    this.setState({\n      changeValue: event.target.value\n    });\n    alert(\"You'll never have me!\");\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, \"Create task\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveProgress,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }\n    }, \"Save progress\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.course.split(' ').join('-')}-course`,\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.chosenDate.split(' ').join('-')}-date`,\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 27\n          }\n        }, task.chosenDate.split(\"T\")[0]))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.onClick(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 31\n          }\n        }, \"settings\")), this.state.showForm && this.renderForm(), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","InfiniteCalendar","KanbanBoard","constructor","onClick","name","state","showForm","setState","renderForm","handleSubmit","changeValue","handleEdit","inputValue","onInputChange","enterAddTask","e","target","value","onCourseInputChange","courseInput","addTask","_tasks","tasks","createMerchant","dateInput","push","course","chosenDate","stage","key","back","map","task","tid","forward","remove","idToDelete","i","Object","keys","length","console","log","splice","deleteMerchant","saveProgress","updateStage","calendarDate","Date","count","changeTask","stagesNames","handleChange","bind","onFormSubmit","getMerchant","datafiles","fetch","then","response","text","data","obj","JSON","parse","task_name","due_date","method","headers","body","stringify","window","location","reload","id","updateTask","column","change","date","toISOString","split","toString","event","alert","preventDefault","render","stagesTasks","stageId","weekStartsOn","layout","index","join"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAO,oCAAP;AAMA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;;AAHY,SA0IdC,OA1Ic,GA0IHC,IAAD,IAAU;AAClB;AACA,UAAG,KAAKC,KAAL,CAAWC,QAAd,EAAuB;AACrB,aAAKC,QAAL,CAAc;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAFD,MAGK;AACL,aAAKC,QAAL,CAAc;AAAED,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACC;AACJ,KAlJe;;AAAA,SAoJhBE,UApJgB,GAoJH,MAAM;AAChB,0BACI;AAAK,QAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK,WAA1B;AAAuC,QAAA,QAAQ,EAAE,KAAKC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,CADA,CADD,EAUA,KAAKN,KAAL,CAAWK,WAVX,oBAYE;AAAO,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWO,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKC,aAApD;AAAmE,QAAA,SAAS,EAAE,KAAKC,YAAnF;AAAiG,QAAA,EAAE,EAAC,mBAApG;AAAwH,QAAA,IAAI,EAAC,MAA7H;AAAoI,QAAA,SAAS,EAAC,OAA9I;AAAsJ,QAAA,WAAW,EAAC,eAAlK;AAAkL,uBAAY,mBAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADJ;AAiBF,KAtKe;;AAAA,SA0MdD,aA1Mc,GA0MGE,CAAD,IAAO;AACrB,WAAKR,QAAL,CAAc;AACZK,QAAAA,UAAU,EAAEG,CAAC,CAACC,MAAF,CAASC;AADT,OAAd;AAGD,KA9Ma;;AAAA,SAgNdC,mBAhNc,GAgNSH,CAAD,IAAO;AAC3B,WAAKR,QAAL,CAAc;AACZY,QAAAA,WAAW,EAAEJ,CAAC,CAACC,MAAF,CAASC;AADV,OAAd;AAGD,KApNa;;AAAA,SAqNdG,OArNc,GAqNJ,MAAM;AACd,UAAI,KAAKf,KAAL,CAAWO,UAAf,EAA2B;AACzB,cAAMS,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAA1B;AACA,aAAKC,cAAL,CAAoB,KAAKlB,KAAL,CAAWO,UAA/B,EAA2C,KAAKP,KAAL,CAAWc,WAAtD,EAAmE,KAAKd,KAAL,CAAWmB,SAA9E;;AACAH,QAAAA,MAAM,CAACI,IAAP,CAAY;AAAErB,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWO,UAAnB;AAA+Bc,UAAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWc,WAAlD;AAA+DQ,UAAAA,UAAU,EAAE,KAAKtB,KAAL,CAAWmB,SAAtF;AAAkGI,UAAAA,KAAK,EAAE;AAAzG,SAAZ;;AAGA,aAAKrB,QAAL,CAAc;AAAEe,UAAAA,KAAK,EAAED,MAAT;AAAiBT,UAAAA,UAAU,EAAC;AAA5B,SAAd;AACA,aAAKL,QAAL,CAAc;AAAEe,UAAAA,KAAK,EAAED,MAAT;AAAiBF,UAAAA,WAAW,EAAC;AAA7B,SAAd;AACA,aAAKZ,QAAL,CAAc;AAAEe,UAAAA,KAAK,EAAED,MAAT;AAAiBG,UAAAA,SAAS,EAAC;AAA3B,SAAd;AAID;AAEF,KApOa;;AAAA,SAsOdV,YAtOc,GAsOEC,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACc,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAKT,OAAL;AACD;AACF,KA1Oa;;AAAA,SA2OdU,IA3Oc,GA2ON1B,IAAD,IAAU;AACf,UAAIiB,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAAxB;AACAD,MAAAA,MAAM,GAAGA,MAAM,CAACU,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAAC5B,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAAC6B,UAAAA,GAAG,EAAED,IAAI,CAACC,GAAX;AAAgB7B,UAAAA,IAAI,EAAE4B,IAAI,CAAC5B,IAA3B;AAAiCsB,UAAAA,MAAM,EAAEM,IAAI,CAACN,MAA9C;AAAqDC,UAAAA,UAAU,EAAEK,IAAI,CAACL,UAAtE;AAAkFC,UAAAA,KAAK,EAAEI,IAAI,CAACJ,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsBI,IAAI,CAACJ,KAAL,GAAY;AAA3H,SAAP,CAAvB,KACK,OAAOI,IAAP;AACN,OAHQ,CAAT;AAKA,WAAKzB,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAED;AAAT,OAAd;AACD,KAnPa;;AAAA,SAqPda,OArPc,GAqPH9B,IAAD,IAAU;AAClB,UAAIiB,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAAxB;AACAD,MAAAA,MAAM,GAAGA,MAAM,CAACU,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAAC5B,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAAE6B,UAAAA,GAAG,EAAED,IAAI,CAACC,GAAZ;AAAiB7B,UAAAA,IAAI,EAAE4B,IAAI,CAAC5B,IAA5B;AAAkCsB,UAAAA,MAAM,EAAEM,IAAI,CAACN,MAA/C;AAAsDC,UAAAA,UAAU,EAAEK,IAAI,CAACL,UAAvE;AAAmFC,UAAAA,KAAK,EAAEI,IAAI,CAACJ,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsBI,IAAI,CAACJ,KAAL,GAAY;AAA5H,SAAP,CAAvB,KACK,OAAOI,IAAP;AACN,OAHQ,CAAT;AAKA,WAAKzB,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAED;AAAT,OAAd;AACD,KA7Pa;;AAAA,SA+Pdc,MA/Pc,GA+PJ/B,IAAD,IAAU;AAChB;AACA,UAAIiB,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAAxB;AACA,UAAIc,UAAU,GAAG,CAAjB;;AACA,WAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBmB,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AACnD,YAAIhB,MAAM,CAACgB,CAAD,CAAN,CAAUjC,IAAV,GAAiBA,IAArB,EAA2B;AACzBgC,UAAAA,UAAU,GAAGf,MAAM,CAACgB,CAAD,CAAN,CAAUJ,GAAvB;AACAQ,UAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACgB,CAAD,CAAN,CAAUjC,IAAtB;AACAqC,UAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACgB,CAAD,CAAN,CAAUJ,GAAtB;;AACAZ,UAAAA,MAAM,CAACsB,MAAP,CAAcN,CAAd,EAAiB,CAAjB;;AACC,eAAKO,cAAL,CAAoBR,UAApB;AACA,eAAK7B,QAAL,CAAc;AAAEe,YAAAA,KAAK,EAAED;AAAT,WAAd;AAEF;AAEH;;AAAA;AAGD,KAjRa;;AAAA,SAoRdwB,YApRc,GAoRC,MAAM;AACnB,UAAIxB,MAAM,GAAG,KAAKhB,KAAL,CAAWiB,KAAxB;;AAEC,WAAK,IAAIe,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYlB,MAAZ,EAAoBmB,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AACjD,aAAKS,WAAL,CAAiBzB,MAAM,CAACgB,CAAD,CAAN,CAAUJ,GAA3B,EAAgCZ,MAAM,CAACgB,CAAD,CAAN,CAAUT,KAA1C;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACgB,CAAD,CAAN,CAAUJ,GAAtB;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYrB,MAAM,CAACgB,CAAD,CAAN,CAAUjC,IAAtB;AACD;;AAAA;AACD,WAAKG,QAAL,CAAc;AAAEe,QAAAA,KAAK,EAAED;AAAT,OAAd;AAIH,KAhSa;;AAKZ,SAAKhB,KAAL,GAAa;AAEXiB,MAAAA,KAAK,EAAE,EAFI;AAGXV,MAAAA,UAAU,EAAE,EAHD;AAIXO,MAAAA,WAAW,EAAE,EAJF;AAKXK,MAAAA,SAAS,EAAE,EALA;AAMXuB,MAAAA,YAAY,EAAE,IAAIC,IAAJ,EANH;AAOXC,MAAAA,KAAK,EAAE,CAPI;AAQXC,MAAAA,UAAU,EAAE,EARD;AASX5C,MAAAA,QAAQ,EAAE,KATC;AAUXI,MAAAA,WAAW,EAAE;AAVF,KAAb;AAeA,SAAKyC,WAAL,GAAmB,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAA+B,QAA/B,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlD,OAAL,GAAe,KAAKA,OAAL,CAAakD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAK1C,UAAL,GAAkB,KAAKA,UAAL,CAAgB0C,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKE,WAAL;AAID;;AAED,QAAMA,WAAN,GAAoB;AAClB,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,KAAK,CAAC,uBAAD,CAAL,CACHC,IADG,CACEC,QAAQ,IAAI;AAChB;AACA,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJG,EAKHF,IALG,CAKEG,IAAI,IAAI;AACZ,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;;AACA,WAAK,IAAIxB,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYuB,GAAZ,EAAiBtB,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAE/CmB,QAAAA,SAAS,CAAC/B,IAAV,CAAe;AACbQ,UAAAA,GAAG,EAAE6B,GAAG,CAACzB,CAAD,CAAH,CAAOJ,GADC;AAEb7B,UAAAA,IAAI,EAAE0D,GAAG,CAACzB,CAAD,CAAH,CAAO4B,SAFA;AAGbvC,UAAAA,MAAM,EAAEoC,GAAG,CAACzB,CAAD,CAAH,CAAOX,MAHF;AAIbC,UAAAA,UAAU,EAAEmC,GAAG,CAACzB,CAAD,CAAH,CAAO6B,QAJN;AAKbtC,UAAAA,KAAK,EAAEkC,GAAG,CAACzB,CAAD,CAAH,CAAOT;AALD,SAAf,EAF+C,CAWjD;AAEG;;AAAA;AAED,WAAKrB,QAAL,CAAc;AAACe,QAAAA,KAAK,EAAEkC;AAAR,OAAd;AAEH,KAxBG,CAAN;AAyBD;;AAMD,QAAMjC,cAAN,CAAqBnB,IAArB,EAA2BsB,MAA3B,EAAmCwC,QAAnC,EAA6C;AAC3C;AACA;AACA;AACA,UAAMtC,KAAK,GAAG,CAAd;AACA,UAAM6B,KAAK,CAAC,6BAAD,EAAgC;AACzCU,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAAClE,QAAAA,IAAD;AAAOsB,QAAAA,MAAP;AAAewC,QAAAA,QAAf;AAAwBtC,QAAAA;AAAxB,OAAf;AALmC,KAAhC,CAAL,CAOH8B,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN;AAUE,SAAKrD,QAAL,CAAc;AAAEe,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB;AAApB,KAAd;AAEAiD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAjByC,CAqB7C;AACA;AACA;AACA;AACC;;AACD,QAAM3B,WAAN,CAAkB4B,EAAlB,EAAsB9C,KAAtB,EAA6B;AAC3B,UAAM6B,KAAK,CAAE,+BAA8BiB,EAAG,EAAnC,EAAsC;AAC/CP,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsC;AAK/CC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAACI,QAAAA,EAAD;AAAK9C,QAAAA;AAAL,OAAf;AALyC,KAAtC,CAAL,CAOH8B,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN,CAD2B,CAWzB;AACA;AACA;AACA;;AACA,SAAKrD,QAAL,CAAc;AAAEe,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB;AAApB,KAAd,EAfyB,CAmBzB;AACH;;AACD,QAAMqD,UAAN,CAAiBD,EAAjB,EAAqBE,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,UAAMpB,KAAK,CAAE,+BAA8BiB,EAAG,EAAnC,EAAsC;AAC/CP,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsC;AAK/CC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAACI,QAAAA,EAAD;AAAKE,QAAAA,MAAL;AAAaC,QAAAA;AAAb,OAAf;AALyC,KAAtC,CAAL,CAOHnB,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN,CADmC,CAWjC;AACA;AACA;AACA;;AACA,SAAKrD,QAAL,CAAc;AAAEe,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWiB;AAApB,KAAd,EAfiC,CAmBjC;AACH,GArIgD,CAuIjD;AAEA;;;AA+BE,QAAMsB,cAAN,CAAqB8B,EAArB,EAAyB;AAEzB,UAAMjB,KAAK,CAAE,+BAA8BiB,EAAG,EAAnC,EAAsC;AAC/CP,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAL,CAGHT,IAHG,CAGEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALG,EAMHF,IANG,CAMEG,IAAI,IAAI;AACZ;AACA,WAAKN,WAAL;AACD,KATG,CAAN,CAFyB,CAavB;AACH;;AAEDH,EAAAA,YAAY,CAAC0B,IAAD,EAAO;AACjB,SAAKvE,QAAL,CAAc;AACZwC,MAAAA,YAAY,EAAE+B,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CADF;AAEZxD,MAAAA,SAAS,EAAEsD,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCC,QAAjC;AAFC,KAAd;AAKD;;AAEDtE,EAAAA,UAAU,CAACuE,KAAD,EAAQ;AAChB,SAAK3E,QAAL,CAAc;AAACG,MAAAA,WAAW,EAAEwE,KAAK,CAAClE,MAAN,CAAaC;AAA3B,KAAd;AACAkE,IAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;;AAED7B,EAAAA,YAAY,CAACvC,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACqE,cAAF;AACA3C,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrC,KAAL,CAAWsB,UAAvB;AAED;;AA0FD0D,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE/D,MAAAA;AAAF,QAAY,KAAKjB,KAAvB;AACA,QAAIiF,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKc,WAAL,CAAiBX,MAArC,EAA6CH,CAAC,EAA9C,EAAkD;AAChDiD,MAAAA,WAAW,CAAC7D,IAAZ,CAAiB,EAAjB;AACD;;AACD,SAAK,IAAIO,IAAT,IAAiBV,KAAjB,EAAwB;AACtB,YAAMiE,OAAO,GAAGvD,IAAI,CAACJ,KAArB;AACA0D,MAAAA,WAAW,CAACC,OAAD,CAAX,CAAqB9D,IAArB,CAA0BO,IAA1B;AAED;;AAID,wBAEE;AAAK,MAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAEE,MAAA,QAAQ,EAAG,KAAK3B,KAAL,CAAW0C,YAFxB;AAGE,MAAA,QAAQ,EAAG,KAAKK,YAHlB;AAIE,MAAA,MAAM,EAAE;AACRoC,QAAAA,YAAY,EAAE;AADN,OAJV;AAME,MAAA,cAAc,EAAE;AAChBC,QAAAA,MAAM,EAAE;AADQ,OANlB;AASE,MAAA,KAAK,EAAE,GATT;AAUE,MAAA,MAAM,EAAE,GAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAeG;AAAS,MAAA,SAAS,EAAC,4DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,KAAK,EAAE,KAAKpF,KAAL,CAAWO,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKC,aAApD;AAAmE,MAAA,SAAS,EAAE,KAAKC,YAAnF;AAAiG,MAAA,EAAE,EAAC,mBAApG;AAAwH,MAAA,IAAI,EAAC,MAA7H;AAAoI,MAAA,SAAS,EAAC,OAA9I;AAAsJ,MAAA,WAAW,EAAC,eAAlK;AAAkL,qBAAY,mBAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAO,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWc,WAAzB;AAAsC,MAAA,QAAQ,EAAE,KAAKD,mBAArD;AAA0E,MAAA,SAAS,EAAE,KAAKJ,YAA1F;AAAwG,MAAA,EAAE,EAAC,mBAA3G;AAA+H,MAAA,IAAI,EAAC,MAApI;AAA2I,MAAA,SAAS,EAAC,OAArJ;AAA6J,MAAA,WAAW,EAAC,aAAzK;AAAuL,qBAAY,mBAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAO,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWmB,SAAzB;AAAoC,MAAA,SAAS,EAAE,KAAKV,YAApD;AAAkE,MAAA,EAAE,EAAC,mBAArE;AAAyF,MAAA,IAAI,EAAC,MAA9F;AAAqG,MAAA,SAAS,EAAC,OAA/G;AAAuH,MAAA,WAAW,EAAC,eAAnI;AAAmJ,qBAAY,mBAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAMC;AAAQ,MAAA,OAAO,EAAE,KAAKM,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,SAAS,EAAC,YAAvD;AAAoE,qBAAY,oBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAND,eAOC;AAAQ,MAAA,OAAO,EAAE,KAAKyB,YAAtB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,SAAS,EAAC,YAA5D;AAAyE,qBAAY,oBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPD,CAfH,eA0BE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGyC,WAAW,CAACvD,GAAZ,CAAgB,CAACT,KAAD,EAAQe,CAAR,KAAc;AAC7B,0BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,GAAG,EAAG,GAAEA,CAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKc,WAAL,CAAiBd,CAAjB,CAAL,CADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,uBAAc,SAAQA,CAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGf,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAO0D,KAAP,KAAiB;AAC1B,4BAAO;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAiC,UAAA,GAAG,EAAG,GAAErD,CAAE,GAAEqD,KAAM,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACL;AAAK,UAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAS,UAAA,SAAS,EAAC,gEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAM,yBAAc,GAAE1D,IAAI,CAAC5B,IAAL,CAAU4E,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8D3D,IAAI,CAAC5B,IAAnE,CADF,eAEE;AAAS,UAAA,SAAS,EAAC,6DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAM,yBAAc,GAAE4B,IAAI,CAACN,MAAL,CAAYsD,KAAZ,CAAkB,GAAlB,EAAuBW,IAAvB,CAA4B,GAA5B,CAAiC,SAAvD;AAAiE,UAAA,SAAS,EAAC,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAuF3D,IAAI,CAACN,MAA5F,CADA,eAEA;AAAM,yBAAc,GAAEM,IAAI,CAACL,UAAL,CAAgBqD,KAAhB,CAAsB,GAAtB,EAA2BW,IAA3B,CAAgC,GAAhC,CAAqC,OAA3D;AAAmE,UAAA,SAAS,EAAC,WAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0F3D,IAAI,CAACL,UAAL,CAAgBqD,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAA1F,CAFA,CAFF,CADA,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK7E,OAAL,CAAa6B,IAAI,CAAC5B,IAAlB,CAAvB;AAAgD,UAAA,SAAS,EAAC,sBAA1D;AAAiF,yBAAc,GAAE4B,IAAI,CAAC5B,IAAL,CAAU4E,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,OAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADA,EAIG,KAAKtF,KAAL,CAAWC,QAAX,IAAuB,KAAKE,UAAL,EAJ1B,eAME;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKsB,IAAL,CAAUE,IAAI,CAAC5B,IAAf,CAAvB;AAA6C,UAAA,SAAS,EAAC,sBAAvD;AAA8E,yBAAc,GAAE4B,IAAI,CAAC5B,IAAL,CAAU4E,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,OAA7H;AAAqI,UAAA,QAAQ,EAAE3D,IAAI,CAACJ,KAAL,IAAc,CAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CANF,eASE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKM,OAAL,CAAaF,IAAI,CAAC5B,IAAlB,CAAvB;AAAgD,UAAA,SAAS,EAAC,sBAA1D;AAAiF,yBAAc,GAAE4B,IAAI,CAAC5B,IAAL,CAAU4E,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,UAAhI;AAA2I,UAAA,QAAQ,EAAE3D,IAAI,CAACJ,KAAL,IAAc,CAAnK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CATF,eAYE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKO,MAAL,CAAYH,IAAI,CAAC5B,IAAjB,CAAvB;AAA+C,UAAA,SAAS,EAAC,uBAAzD;AAAiF,yBAAc,GAAE4B,IAAI,CAAC5B,IAAL,CAAU4E,KAAV,CAAgB,GAAhB,EAAqBW,IAArB,CAA0B,GAA1B,CAA+B,SAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAZF,CARF,CADK,CAAP;AA2BD,OA5BA,CADH,CAFF,CADF,CADF;AAsCD,KAvCA,CADH,CA1BF,CAFF;AAyED;;AA1XgD","sourcesContent":["import React, {Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      count: 0,\n      changeTask: '', \n      showForm: false,\n      changeValue: 'What to change'\n      \n\n      \n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n    this.getMerchant();\n    \n   \n    \n  }\n\n  async getMerchant() {\n    const datafiles = [];\n    await fetch('http://localhost:3001')\n      .then(response => {\n        // alert(response.tid);\n        return response.text();\n      })\n      .then(data => { \n        const obj = JSON.parse(data);\n        for (let i =0; i < Object.keys(obj).length; i++) {\n            \n          datafiles.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: obj[i].stage,\n            \n\n          }); \n        // alert(obj[i].tid);\n      \n          };\n\n          this.setState({tasks: datafiles});\n\n      });\n  }\n\n  \n\n  \n\n  async createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    const stage = 0;\n    await fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date,stage}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      this.setState({ tasks: this.state.tasks });\n\n      window.location.reload();\n    \n      \n      \n  //     .then(data => {\n  //       alert(data);\n  //       this.getMerchant();\n  //     });\n  }\n  async updateStage(id, stage) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id, stage}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      // .then(data => {\n      //   // alert(data);\n      //   this.getMerchant();\n      // });\n      this.setState({ tasks: this.state.tasks });\n      \n      \n\n      // window.location.reload();\n  }\n  async updateTask(id, column, change) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id, column, change}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      // .then(data => {\n      //   // alert(data);\n      //   this.getMerchant();\n      // });\n      this.setState({ tasks: this.state.tasks });\n      \n      \n\n      // window.location.reload();\n  }\n\n  // updateTask = (name) => {\n      \n  // }\n\n  onClick = (name) => {\n    // On click we change our state â€“ this will trigger our `render` method\n    if(this.state.showForm){\n      this.setState({ showForm: false });\n    }\n    else {\n    this.setState({ showForm: true });\n    }\n}\n\nrenderForm = () => {\n   return (\n       <div class=\"mt-50 layout-column\"> \n        <form onSubmit={this.handleSubmit}>\n        <label>\n          <p>What to change</p>\n          <select value={this.state.changeValue} onChange={this.handleEdit}>\n            <option value=\"test\">Test</option>\n            <option value=\"test2\">Test</option>   \n          </select>\n        </label>\n      </form>\n      {this.state.changeValue}; \n\n         <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          \n      </div>\n   );\n}\n    async deleteMerchant(id) {\n      \n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        // alert(data);\n        this.getMerchant();\n      });\n\n      // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    })\n     \n  }\n\n  handleEdit(event) {\n    this.setState({changeValue: event.target.value});\n    alert(\"You'll never have me!\");\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n    \n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n\n   \n      \n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return {tid: task.tid, name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage -1  };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { tid: task.tid, name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage +1  };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n     // Find id where name is part of id\n     let _tasks = this.state.tasks;\n     let idToDelete = 0;\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n      if (_tasks[i].name = name) {\n        idToDelete = _tasks[i].tid;\n        console.log(_tasks[i].name);\n        console.log(_tasks[i].tid);\n        _tasks.splice(i, 1);\n         this.deleteMerchant(idToDelete);\n         this.setState({ tasks: _tasks });\n         \n      }\n     \n   };\n   \n    \n  }\n  \n\n  saveProgress = () => {\n    let _tasks = this.state.tasks;\n\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n        this.updateStage(_tasks[i].tid, _tasks[i].stage);\n        console.log(_tasks[i].tid);\n        console.log(_tasks[i].name);\n      };\n      this.setState({ tasks: _tasks });\n  \n\n\n  }\n\n  render() {\n    const { tasks } = this.state;\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n      \n    }\n    \n    \n   \n    return (\n      \n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Create task</button>\n          <button onClick={this.saveProgress} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Save progress</button>\n  \n          {/* <button  onClick={this.getMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button> */}\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span data-testid={`${task.course.split(' ').join('-')}-course`} className=\"taskIcon\">{task.course}</span>\n                          <span data-testid={`${task.chosenDate.split(' ').join('-')}-date`} className=\"taskIcon2\">{task.chosenDate.split(\"T\")[0]}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                          <button onClick={() => this.onClick(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} >\n                              <i className=\"material-icons\">settings</i>\n                            </button>\n                            {this.state.showForm && this.renderForm()}\n\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}