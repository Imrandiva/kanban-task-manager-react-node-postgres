{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component, useState } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.getMerchant = () => {\n      fetch('http://localhost:3001').then(response => {\n        // alert(response.text());\n        return response.text();\n      }).then(data => {\n        const obj = JSON.parse(data);\n\n        for (let i = 0; i < Object.keys(obj).length; i++) {\n          var values = [];\n\n          for (const [key, value] of Object.entries(obj[i])) {\n            values.push(value);\n          }\n\n          this.state.tasks.push({\n            name: values[0],\n            course: values[1],\n            chosenDate: values[2],\n            stage: values[3]\n          });\n        }\n\n        ;\n        alert(obj[0].task_name);\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.filter(e => e.name != name);\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date()\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this); // useEffect(() => {\n    //   getMerchant();\n    //    }, []);\n    //   var myData =  require('./tasks.json');\n    //     for (let i =0; i < Object.keys(myData.all_tasks).length; i++) {\n    //       var values = [];\n    //       for (const [key, value] of Object.entries(myData.all_tasks[i])) {\n    //           values.push(value);\n    //       }           \n    //         this.state.tasks.push({\n    //           name: values[0],\n    //           course: values[1],\n    //           chosenDate: values[2],\n    //           stage: values[3],\n    //       }); \n    // };\n  }\n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date\n      })\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      this.getMerchant();\n    });\n  }\n\n  deleteMerchant() {\n    let id = prompt('Enter task id');\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      alert(data);\n      this.getMerchant();\n    });\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toLocaleDateString(\"sv-SE\"),\n      dateInput: date.toLocaleDateString(\"sv-SE\").toString()\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  // deleteTask = () => {\n  //   ;\n  // }\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"ml-30\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, \"Create task\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getMerchant,\n      type: \"submit\",\n      className: \"save-progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }, \"Delete a task \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.name.split(' ').join('-')}-name`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.course.split(' ').join('-')}-course`,\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          \"data-testid\": `${task.chosenDate.split(' ').join('-')}-date`,\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 27\n          }\n        }, task.chosenDate))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-back`,\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-forward`,\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          \"data-testid\": `${task.name.split(' ').join('-')}-delete`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","useState","InfiniteCalendar","KanbanBoard","constructor","getMerchant","fetch","then","response","text","data","obj","JSON","parse","i","Object","keys","length","values","key","value","entries","push","state","tasks","name","course","chosenDate","stage","alert","task_name","onInputChange","e","setState","inputValue","target","onCourseInputChange","courseInput","addTask","_tasks","createMerchant","dateInput","enterAddTask","back","map","task","forward","remove","filter","calendarDate","Date","stagesNames","handleChange","bind","onFormSubmit","due_date","method","headers","body","stringify","deleteMerchant","id","prompt","date","toLocaleDateString","toString","preventDefault","console","log","render","stagesTasks","stageId","weekStartsOn","layout","index","split","join"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      \n\n      \n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n\n    // useEffect(() => {\n    //   getMerchant();\n    //    }, []);\n      \n    \n    \n\n    \n  //   var myData =  require('./tasks.json');\n  //     for (let i =0; i < Object.keys(myData.all_tasks).length; i++) {\n  //       var values = [];\n  //       for (const [key, value] of Object.entries(myData.all_tasks[i])) {\n  //           values.push(value);\n  //       }           \n  //         this.state.tasks.push({\n  //           name: values[0],\n  //           course: values[1],\n  //           chosenDate: values[2],\n  //           stage: values[3],\n\n  //       }); \n      \n  // };\n    \n  }\n\n  getMerchant = () => {\n    fetch('http://localhost:3001')\n      .then(response => {\n        // alert(response.text());\n        return response.text();\n      })\n      .then(data => { \n        const obj = JSON.parse(data);\n            for (let i =0; i < Object.keys(obj).length; i++) {\n        var values = [];\n        for (const [key, value] of Object.entries(obj[i])) {\n            values.push(value);\n        }           \n          this.state.tasks.push({\n            name: values[0],\n            course: values[1],\n            chosenDate: values[2],\n            stage: values[3],\n\n        }); \n      \n  };\n        alert(obj[0].task_name);\n      });\n  }\n  \n  \n\n  createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        this.getMerchant();\n      });\n  }\n\n    deleteMerchant() {\n    let id = prompt('Enter task id');\n    fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        this.getMerchant();\n      });\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toLocaleDateString(\"sv-SE\"),\n      dateInput: date.toLocaleDateString(\"sv-SE\").toString()\n    })\n     \n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n  }\n\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n\n  // onDateInputChange = (e) => {\n  //   this.setState({\n  //     dateInput: e.target.value\n  //   })\n  // }\n  //  createMerchant = () => {\n  //   let name = this.state.inputValue;\n  //   let course = this.state.courseInput;\n  //   let due_date = this.state.dateInput;\n  //   fetch('http://localhost:3001/tasks', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({name, course, due_date}),\n  //   })\n  //     .then(response => {\n  //       return response.text();\n  //     })\n    \n  // }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course, chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage - 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage + 1 };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.filter(e => e.name != name);\n    this.setState({ tasks: _tasks });\n  }\n\n  // deleteTask = () => {\n  //   ;\n\n    \n  // }\n\n\n  render() {\n    const { tasks } = this.state;\n    \n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return (\n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"ml-30\" data-testid=\"create-task-button\">Create task</button>\n          <button  onClick={this.getMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button>\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span data-testid={`${task.name.split(' ').join('-')}-name`}>{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span data-testid={`${task.course.split(' ').join('-')}-course`} className=\"taskIcon\">{task.course}</span>\n                          <span data-testid={`${task.chosenDate.split(' ').join('-')}-date`} className=\"taskIcon2\">{task.chosenDate}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-back`} disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\" data-testid={`${task.name.split(' ').join('-')}-forward`} disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\" data-testid={`${task.name.split(' ').join('-')}-delete`}>\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}