{"ast":null,"code":"var _jsxFileName = \"/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js\";\nimport React, { Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super(); // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.confirmUpdates = name => {\n      let idToUpdate;\n      let _tasks = this.state.tasks;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        if (_tasks[i].name = name) {\n          idToUpdate = _tasks[i].tid;\n          this.updateTask(idToUpdate, this.state.chosenColumn, this.state.changeTask);\n          this.saveProgress(_tasks[i].id, _tasks[i].stage);\n          this.setState({\n            tasks: _tasks,\n            chosenColumn: '',\n            changeTask: 'task_name',\n            showForm: false\n          });\n        }\n      }\n\n      window.location.reload();\n    };\n\n    this.onClick = name => {\n      // On click we change our state â€“ this will trigger our `render` method\n      if (this.state.showForm) {\n        this.setState({\n          showForm: false\n        });\n      } else {\n        this.setState({\n          showForm: true\n        });\n      }\n    };\n\n    this.renderForm = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mt-50 layout-column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }, \"What to change\"), /*#__PURE__*/React.createElement(\"select\", {\n        value: this.state.chosenColumn,\n        onChange: this.handleEdit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"task_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }\n      }, \"Task name\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"course\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }\n      }, \"Course\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"due_date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"Due date\")))), /*#__PURE__*/React.createElement(\"input\", {\n        value: this.state.changeTask,\n        onChange: this.onEditTask,\n        id: \"create-task-input\",\n        type: \"text\",\n        className: \"large\",\n        placeholder: \"New task name\",\n        \"data-testid\": \"create-task-input\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 10\n        }\n      }), this.state.chosenColumn, this.state.changeTask, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.confirmUpdates,\n        type: \"submit\",\n        className: \"addthetask\",\n        \"data-testid\": \"update-task-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 10\n        }\n      }, \"Confirm changes\"));\n    };\n\n    this.onEditTask = e => {\n      this.setState({\n        changeTask: e.target.value\n      });\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        inputValue: e.target.value\n      });\n    };\n\n    this.onCourseInputChange = e => {\n      this.setState({\n        courseInput: e.target.value\n      });\n    };\n\n    this.addTask = () => {\n      if (this.state.inputValue) {\n        const _tasks = this.state.tasks;\n        this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n\n        _tasks.push({\n          name: this.state.inputValue,\n          course: this.state.courseInput,\n          chosenDate: this.state.dateInput,\n          stage: 0\n        });\n\n        this.setState({\n          tasks: _tasks,\n          inputValue: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          courseInput: ''\n        });\n        this.setState({\n          tasks: _tasks,\n          dateInput: ''\n        });\n      }\n    };\n\n    this.enterAddTask = e => {\n      if (e.key === 'Enter') {\n        this.addTask();\n      }\n    };\n\n    this.back = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          tid: task.tid,\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 0 ? 0 : task.stage - 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.forward = name => {\n      let _tasks = this.state.tasks;\n      _tasks = _tasks.map(task => {\n        if (task.name == name) return {\n          tid: task.tid,\n          name: task.name,\n          course: task.course,\n          chosenDate: task.chosenDate,\n          stage: task.stage == 3 ? 3 : task.stage + 1\n        };else return task;\n      });\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.remove = name => {\n      // Find id where name is part of id\n      let _tasks = this.state.tasks;\n      let idToDelete = 0;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        if (_tasks[i].name = name) {\n          idToDelete = _tasks[i].tid;\n          console.log(_tasks[i].name);\n          console.log(_tasks[i].tid);\n\n          _tasks.splice(i, 1);\n\n          this.deleteMerchant(idToDelete);\n          this.setState({\n            tasks: _tasks\n          });\n        }\n      }\n\n      ;\n    };\n\n    this.saveProgress = () => {\n      let _tasks = this.state.tasks;\n\n      for (let i = 0; i < Object.keys(_tasks).length; i++) {\n        this.updateStage(_tasks[i].tid, _tasks[i].stage);\n        console.log(_tasks[i].tid);\n        console.log(_tasks[i].name);\n      }\n\n      ;\n      this.setState({\n        tasks: _tasks\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      count: 0,\n      changeTask: '',\n      showForm: false,\n      chosenColumn: 'task_name'\n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing', 'Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.getMerchant();\n  }\n\n  async getMerchant() {\n    const datafiles = [];\n    await fetch('http://localhost:3001').then(response => {\n      // alert(response.tid);\n      return response.text();\n    }).then(data => {\n      const obj = JSON.parse(data);\n\n      for (let i = 0; i < Object.keys(obj).length; i++) {\n        datafiles.push({\n          tid: obj[i].tid,\n          name: obj[i].task_name,\n          course: obj[i].course,\n          chosenDate: obj[i].due_date,\n          stage: obj[i].stage\n        }); // alert(obj[i].tid);\n      }\n\n      ;\n      this.setState({\n        tasks: datafiles\n      });\n    });\n  }\n\n  async createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    const stage = 0;\n    await fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        course,\n        due_date,\n        stage\n      })\n    }).then(response => {\n      return response.text();\n    });\n    this.setState({\n      tasks: this.state.tasks\n    });\n    window.location.reload(); //     .then(data => {\n    //       alert(data);\n    //       this.getMerchant();\n    //     });\n  }\n\n  async updateStage(id, stage) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        stage\n      })\n    }).then(response => {\n      return response.text();\n    }); // .then(data => {\n    //   // alert(data);\n    //   this.getMerchant();\n    // });\n\n    this.setState({\n      tasks: this.state.tasks\n    }); // window.location.reload();\n  }\n\n  async updateTask(id, column, change) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        column,\n        change\n      })\n    }).then(response => {\n      return response.text();\n    }); // .then(data => {\n    //   // alert(data);\n    //   this.getMerchant();\n    // });\n\n    this.setState({\n      tasks: this.state.tasks\n    }); // window.location.reload();\n  }\n\n  async deleteMerchant(id) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      return response.text();\n    }).then(data => {\n      // alert(data);\n      this.getMerchant();\n    }); // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    });\n  }\n\n  handleEdit(event) {\n    this.setState({\n      chosenColumn: event.target.value\n    });\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate);\n  }\n\n  render() {\n    const {\n      tasks\n    } = this.state;\n    let stagesTasks = [];\n\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-20 layout-column justify-content-center align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"deadlineCal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfiniteCalendar, {\n      selected: this.state.calendarDate,\n      onSelect: this.handleChange,\n      locale: {\n        weekStartsOn: 1\n      },\n      displayOptions: {\n        layout: 'landscape'\n      },\n      width: 800,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"mt-50 layout-row align-items-center justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.inputValue,\n      onChange: this.onInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"New task name\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.courseInput,\n      onChange: this.onCourseInputChange,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Course code\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.dateInput,\n      onKeyDown: this.enterAddTask,\n      id: \"create-task-input\",\n      type: \"text\",\n      className: \"large\",\n      placeholder: \"Deadline date\",\n      \"data-testid\": \"create-task-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, \"Create task\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.saveProgress,\n      type: \"submit\",\n      className: \"addthetask\",\n      \"data-testid\": \"create-task-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, \"Save progress\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-50 layout-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, stagesTasks.map((tasks, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card outlined ml-20 mt-0\",\n        key: `${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 19\n        }\n      }, this.stagesNames[i]), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"styled mt-50\",\n        \"data-testid\": `stage-${i}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 19\n        }\n      }, tasks.map((task, index) => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"slide-up-fade-in\",\n          key: `${i}${index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 30\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"layout-column justify-content-between align-items-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-column align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 27\n          }\n        }, task.name), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"mt-50 layout-row align-items-center justify-content-center \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"taskIcon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 27\n          }\n        }, task.course), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"taskIcon2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 27\n          }\n        }, task.chosenDate.split(\"T\")[0]))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.onClick(task.name),\n          className: \"icon-only small mx-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 31\n          }\n        }, \"settings\")), this.state.showForm && this.renderForm(), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.back(task.name),\n          className: \"icon-only small mx-2\",\n          disabled: task.stage == 0,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 31\n          }\n        }, \"arrow_back\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.forward(task.name),\n          className: \"icon-only small mx-2\",\n          disabled: task.stage == 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 31\n          }\n        }, \"arrow_forward\")), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: () => this.remove(task.name),\n          className: \"icon-only medium mx-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"material-icons\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 31\n          }\n        }, \"checkmark\")))));\n      }))));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/imrandiva/react-kanban-board-challenge-master/client/src/components/kanban-board/index.js"],"names":["React","Component","InfiniteCalendar","KanbanBoard","constructor","confirmUpdates","name","idToUpdate","_tasks","state","tasks","i","Object","keys","length","tid","updateTask","chosenColumn","changeTask","saveProgress","id","stage","setState","showForm","window","location","reload","onClick","renderForm","onFormSubmit","handleEdit","onEditTask","e","target","value","onInputChange","inputValue","onCourseInputChange","courseInput","addTask","createMerchant","dateInput","push","course","chosenDate","enterAddTask","key","back","map","task","forward","remove","idToDelete","console","log","splice","deleteMerchant","updateStage","calendarDate","Date","count","stagesNames","handleChange","bind","getMerchant","datafiles","fetch","then","response","text","data","obj","JSON","parse","task_name","due_date","method","headers","body","stringify","column","change","date","toISOString","split","toString","event","preventDefault","render","stagesTasks","stageId","weekStartsOn","layout","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAO,oCAAP;AAMA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,GAAG;AACZ,YADY,CAEZ;AACA;;AAHY,SAuIdC,cAvIc,GAuIIC,IAAD,IAAU;AACzB,UAAIC,UAAJ;AACA,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;;AACA,WAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AAClD,YAAIH,MAAM,CAACG,CAAD,CAAN,CAAUL,IAAV,GAAiBA,IAArB,EAA2B;AACzBC,UAAAA,UAAU,GAAGC,MAAM,CAACG,CAAD,CAAN,CAAUI,GAAvB;AACA,eAAKC,UAAL,CAAgBT,UAAhB,EAA4B,KAAKE,KAAL,CAAWQ,YAAvC,EAAqD,KAAKR,KAAL,CAAWS,UAAhE;AACA,eAAKC,YAAL,CAAkBX,MAAM,CAACG,CAAD,CAAN,CAAUS,EAA5B,EAAgCZ,MAAM,CAACG,CAAD,CAAN,CAAUU,KAA1C;AACA,eAAKC,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEF,MAAT;AAAiBS,YAAAA,YAAY,EAAC,EAA9B;AAAkCC,YAAAA,UAAU,EAAE,WAA9C;AAA2DK,YAAAA,QAAQ,EAAE;AAArE,WAAd;AACD;AACF;;AACCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,KAnJa;;AAAA,SAqJdC,OArJc,GAqJHrB,IAAD,IAAU;AAClB;AACA,UAAG,KAAKG,KAAL,CAAWc,QAAd,EAAuB;AACrB,aAAKD,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAFD,MAGK;AACL,aAAKD,QAAL,CAAc;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACC;AACJ,KA7Je;;AAAA,SA+JhBK,UA/JgB,GA+JH,MAAM;AAChB,0BACI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAQ,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWQ,YAA1B;AAAwC,QAAA,QAAQ,EAAE,KAAKa,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,QAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CAFF,CADA,CADD,eAYE;AAAO,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWS,UAAzB;AAAqC,QAAA,QAAQ,EAAE,KAAKa,UAApD;AAAgE,QAAA,EAAE,EAAC,mBAAnE;AAAuF,QAAA,IAAI,EAAC,MAA5F;AAAmG,QAAA,SAAS,EAAC,OAA7G;AAAqH,QAAA,WAAW,EAAC,eAAjI;AAAiJ,uBAAY,mBAA7J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAaG,KAAKtB,KAAL,CAAWQ,YAbd,EAcG,KAAKR,KAAL,CAAWS,UAdd,eAeE;AAAQ,QAAA,OAAO,EAAE,KAAKb,cAAtB;AAAsC,QAAA,IAAI,EAAC,QAA3C;AAAoD,QAAA,SAAS,EAAC,YAA9D;AAA2E,uBAAY,oBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAfF,CADJ;AAoBF,KApLe;;AAAA,SAuNd0B,UAvNc,GAuNAC,CAAD,IAAO;AAClB,WAAKV,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAEc,CAAC,CAACC,MAAF,CAASC;AADT,OAAd;AAID,KA5Na;;AAAA,SA6NdC,aA7Nc,GA6NGH,CAAD,IAAO;AACrB,WAAKV,QAAL,CAAc;AACZc,QAAAA,UAAU,EAAEJ,CAAC,CAACC,MAAF,CAASC;AADT,OAAd;AAGD,KAjOa;;AAAA,SAmOdG,mBAnOc,GAmOSL,CAAD,IAAO;AAC3B,WAAKV,QAAL,CAAc;AACZgB,QAAAA,WAAW,EAAEN,CAAC,CAACC,MAAF,CAASC;AADV,OAAd;AAGD,KAvOa;;AAAA,SAwOdK,OAxOc,GAwOJ,MAAM;AACd,UAAI,KAAK9B,KAAL,CAAW2B,UAAf,EAA2B;AACzB,cAAM5B,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAA1B;AACA,aAAK8B,cAAL,CAAoB,KAAK/B,KAAL,CAAW2B,UAA/B,EAA2C,KAAK3B,KAAL,CAAW6B,WAAtD,EAAmE,KAAK7B,KAAL,CAAWgC,SAA9E;;AACAjC,QAAAA,MAAM,CAACkC,IAAP,CAAY;AAAEpC,UAAAA,IAAI,EAAE,KAAKG,KAAL,CAAW2B,UAAnB;AAA+BO,UAAAA,MAAM,EAAE,KAAKlC,KAAL,CAAW6B,WAAlD;AAA+DM,UAAAA,UAAU,EAAE,KAAKnC,KAAL,CAAWgC,SAAtF;AAAkGpB,UAAAA,KAAK,EAAE;AAAzG,SAAZ;;AAGA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEF,MAAT;AAAiB4B,UAAAA,UAAU,EAAC;AAA5B,SAAd;AACA,aAAKd,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEF,MAAT;AAAiB8B,UAAAA,WAAW,EAAC;AAA7B,SAAd;AACA,aAAKhB,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEF,MAAT;AAAiBiC,UAAAA,SAAS,EAAC;AAA3B,SAAd;AAID;AAEF,KAvPa;;AAAA,SAyPdI,YAzPc,GAyPEb,CAAD,IAAO;AACpB,UAAIA,CAAC,CAACc,GAAF,KAAU,OAAd,EAAuB;AACrB,aAAKP,OAAL;AACD;AACF,KA7Pa;;AAAA,SA8PdQ,IA9Pc,GA8PNzC,IAAD,IAAU;AACf,UAAIE,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;AACAF,MAAAA,MAAM,GAAGA,MAAM,CAACwC,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAAC3C,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAACS,UAAAA,GAAG,EAAEkC,IAAI,CAAClC,GAAX;AAAgBT,UAAAA,IAAI,EAAE2C,IAAI,CAAC3C,IAA3B;AAAiCqC,UAAAA,MAAM,EAAEM,IAAI,CAACN,MAA9C;AAAqDC,UAAAA,UAAU,EAAEK,IAAI,CAACL,UAAtE;AAAkFvB,UAAAA,KAAK,EAAE4B,IAAI,CAAC5B,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsB4B,IAAI,CAAC5B,KAAL,GAAY;AAA3H,SAAP,CAAvB,KACK,OAAO4B,IAAP;AACN,OAHQ,CAAT;AAKA,WAAK3B,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAtQa;;AAAA,SAwQd0C,OAxQc,GAwQH5C,IAAD,IAAU;AAClB,UAAIE,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;AACAF,MAAAA,MAAM,GAAGA,MAAM,CAACwC,GAAP,CAAYC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAAC3C,IAAL,IAAaA,IAAjB,EAAuB,OAAO;AAAES,UAAAA,GAAG,EAAEkC,IAAI,CAAClC,GAAZ;AAAiBT,UAAAA,IAAI,EAAE2C,IAAI,CAAC3C,IAA5B;AAAkCqC,UAAAA,MAAM,EAAEM,IAAI,CAACN,MAA/C;AAAsDC,UAAAA,UAAU,EAAEK,IAAI,CAACL,UAAvE;AAAmFvB,UAAAA,KAAK,EAAE4B,IAAI,CAAC5B,KAAL,IAAc,CAAd,GAAkB,CAAlB,GAAsB4B,IAAI,CAAC5B,KAAL,GAAY;AAA5H,SAAP,CAAvB,KACK,OAAO4B,IAAP;AACN,OAHQ,CAAT;AAKA,WAAK3B,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEF;AAAT,OAAd;AACD,KAhRa;;AAAA,SAkRd2C,MAlRc,GAkRJ7C,IAAD,IAAU;AAChB;AACA,UAAIE,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;AACA,UAAI0C,UAAU,GAAG,CAAjB;;AACA,WAAK,IAAIzC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AACnD,YAAIH,MAAM,CAACG,CAAD,CAAN,CAAUL,IAAV,GAAiBA,IAArB,EAA2B;AACzB8C,UAAAA,UAAU,GAAG5C,MAAM,CAACG,CAAD,CAAN,CAAUI,GAAvB;AACAsC,UAAAA,OAAO,CAACC,GAAR,CAAY9C,MAAM,CAACG,CAAD,CAAN,CAAUL,IAAtB;AACA+C,UAAAA,OAAO,CAACC,GAAR,CAAY9C,MAAM,CAACG,CAAD,CAAN,CAAUI,GAAtB;;AACAP,UAAAA,MAAM,CAAC+C,MAAP,CAAc5C,CAAd,EAAiB,CAAjB;;AACC,eAAK6C,cAAL,CAAoBJ,UAApB;AACA,eAAK9B,QAAL,CAAc;AAAEZ,YAAAA,KAAK,EAAEF;AAAT,WAAd;AAEF;AAEH;;AAAA;AAGD,KApSa;;AAAA,SAuSdW,YAvSc,GAuSC,MAAM;AACnB,UAAIX,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAxB;;AAEC,WAAK,IAAIC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAAvC,EAA+CH,CAAC,EAAhD,EAAoD;AACjD,aAAK8C,WAAL,CAAiBjD,MAAM,CAACG,CAAD,CAAN,CAAUI,GAA3B,EAAgCP,MAAM,CAACG,CAAD,CAAN,CAAUU,KAA1C;AACAgC,QAAAA,OAAO,CAACC,GAAR,CAAY9C,MAAM,CAACG,CAAD,CAAN,CAAUI,GAAtB;AACAsC,QAAAA,OAAO,CAACC,GAAR,CAAY9C,MAAM,CAACG,CAAD,CAAN,CAAUL,IAAtB;AACD;;AAAA;AACD,WAAKgB,QAAL,CAAc;AAAEZ,QAAAA,KAAK,EAAEF;AAAT,OAAd;AAIH,KAnTa;;AAKZ,SAAKC,KAAL,GAAa;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGX0B,MAAAA,UAAU,EAAE,EAHD;AAIXE,MAAAA,WAAW,EAAE,EAJF;AAKXG,MAAAA,SAAS,EAAE,EALA;AAMXiB,MAAAA,YAAY,EAAE,IAAIC,IAAJ,EANH;AAOXC,MAAAA,KAAK,EAAE,CAPI;AASX1C,MAAAA,UAAU,EAAE,EATD;AAUXK,MAAAA,QAAQ,EAAE,KAVC;AAWXN,MAAAA,YAAY,EAAE;AAXH,KAAb;AAgBA,SAAK4C,WAAL,GAAmB,CAAC,SAAD,EAAY,OAAZ,EAAqB,SAArB,EAA+B,QAA/B,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlC,YAAL,GAAoB,KAAKA,YAAL,CAAkBkC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKpC,OAAL,GAAe,KAAKA,OAAL,CAAaoC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKjC,UAAL,GAAkB,KAAKA,UAAL,CAAgBiC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKC,WAAL;AAID;;AAED,QAAMA,WAAN,GAAoB;AAClB,UAAMC,SAAS,GAAG,EAAlB;AACA,UAAMC,KAAK,CAAC,uBAAD,CAAL,CACHC,IADG,CACEC,QAAQ,IAAI;AAChB;AACA,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJG,EAKHF,IALG,CAKEG,IAAI,IAAI;AACZ,YAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;;AACA,WAAK,IAAI3D,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAY0D,GAAZ,EAAiBzD,MAApC,EAA4CH,CAAC,EAA7C,EAAiD;AAE/CsD,QAAAA,SAAS,CAACvB,IAAV,CAAe;AACb3B,UAAAA,GAAG,EAAEwD,GAAG,CAAC5D,CAAD,CAAH,CAAOI,GADC;AAEbT,UAAAA,IAAI,EAAEiE,GAAG,CAAC5D,CAAD,CAAH,CAAO+D,SAFA;AAGb/B,UAAAA,MAAM,EAAE4B,GAAG,CAAC5D,CAAD,CAAH,CAAOgC,MAHF;AAIbC,UAAAA,UAAU,EAAE2B,GAAG,CAAC5D,CAAD,CAAH,CAAOgE,QAJN;AAKbtD,UAAAA,KAAK,EAAEkD,GAAG,CAAC5D,CAAD,CAAH,CAAOU;AALD,SAAf,EAF+C,CAWjD;AAEG;;AAAA;AAED,WAAKC,QAAL,CAAc;AAACZ,QAAAA,KAAK,EAAEuD;AAAR,OAAd;AAEH,KAxBG,CAAN;AAyBD;;AAMD,QAAMzB,cAAN,CAAqBlC,IAArB,EAA2BqC,MAA3B,EAAmCgC,QAAnC,EAA6C;AAC3C;AACA;AACA;AACA,UAAMtD,KAAK,GAAG,CAAd;AACA,UAAM6C,KAAK,CAAC,6BAAD,EAAgC;AACzCU,MAAAA,MAAM,EAAE,MADiC;AAEzCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgC;AAKzCC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAACzE,QAAAA,IAAD;AAAOqC,QAAAA,MAAP;AAAegC,QAAAA,QAAf;AAAwBtD,QAAAA;AAAxB,OAAf;AALmC,KAAhC,CAAL,CAOH8C,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN;AAUE,SAAK/C,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAAd;AAEAc,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAjByC,CAqB7C;AACA;AACA;AACA;AACC;;AACD,QAAM+B,WAAN,CAAkBrC,EAAlB,EAAsBC,KAAtB,EAA6B;AAC3B,UAAM6C,KAAK,CAAE,+BAA8B9C,EAAG,EAAnC,EAAsC;AAC/CwD,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsC;AAK/CC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAAC3D,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAAf;AALyC,KAAtC,CAAL,CAOH8C,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN,CAD2B,CAWzB;AACA;AACA;AACA;;AACA,SAAK/C,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAAd,EAfyB,CAmBzB;AACH;;AACD,QAAMM,UAAN,CAAiBI,EAAjB,EAAqB4D,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,UAAMf,KAAK,CAAE,+BAA8B9C,EAAG,EAAnC,EAAsC;AAC/CwD,MAAAA,MAAM,EAAE,KADuC;AAE/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFsC;AAK/CC,MAAAA,IAAI,EAAEN,IAAI,CAACO,SAAL,CAAe;AAAC3D,QAAAA,EAAD;AAAK4D,QAAAA,MAAL;AAAaC,QAAAA;AAAb,OAAf;AALyC,KAAtC,CAAL,CAOHd,IAPG,CAOEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KATG,CAAN,CADmC,CAWjC;AACA;AACA;AACA;;AACA,SAAK/C,QAAL,CAAc;AAAEZ,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,KAAd,EAfiC,CAmBjC;AACH;;AAgDC,QAAM8C,cAAN,CAAqBpC,EAArB,EAAyB;AAEzB,UAAM8C,KAAK,CAAE,+BAA8B9C,EAAG,EAAnC,EAAsC;AAC/CwD,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAL,CAGHT,IAHG,CAGEC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KALG,EAMHF,IANG,CAMEG,IAAI,IAAI;AACZ;AACA,WAAKN,WAAL;AACD,KATG,CAAN,CAFyB,CAavB;AACH;;AAEDF,EAAAA,YAAY,CAACoB,IAAD,EAAO;AACjB,SAAK5D,QAAL,CAAc;AACZoC,MAAAA,YAAY,EAAEwB,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CADF;AAEZ3C,MAAAA,SAAS,EAAEyC,IAAI,CAACC,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,EAAiCC,QAAjC;AAFC,KAAd;AAKD;;AAEDvD,EAAAA,UAAU,CAACwD,KAAD,EAAQ;AAChB,SAAKhE,QAAL,CAAc;AAACL,MAAAA,YAAY,EAAEqE,KAAK,CAACrD,MAAN,CAAaC;AAA5B,KAAd;AACD;;AAEDL,EAAAA,YAAY,CAACG,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACuD,cAAF;AACAlC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWmC,UAAvB;AAED;;AAgGD4C,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE9E,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AACA,QAAIgF,WAAW,GAAG,EAAlB;;AACA,SAAK,IAAI9E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKkD,WAAL,CAAiB/C,MAArC,EAA6CH,CAAC,EAA9C,EAAkD;AAChD8E,MAAAA,WAAW,CAAC/C,IAAZ,CAAiB,EAAjB;AACD;;AACD,SAAK,IAAIO,IAAT,IAAiBvC,KAAjB,EAAwB;AACtB,YAAMgF,OAAO,GAAGzC,IAAI,CAAC5B,KAArB;AACAoE,MAAAA,WAAW,CAACC,OAAD,CAAX,CAAqBhD,IAArB,CAA0BO,IAA1B;AAED;;AAID,wBAEE;AAAK,MAAA,SAAS,EAAC,+DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAEE,MAAA,QAAQ,EAAG,KAAKxC,KAAL,CAAWiD,YAFxB;AAGE,MAAA,QAAQ,EAAG,KAAKI,YAHlB;AAIE,MAAA,MAAM,EAAE;AACR6B,QAAAA,YAAY,EAAE;AADN,OAJV;AAME,MAAA,cAAc,EAAE;AAChBC,QAAAA,MAAM,EAAE;AADQ,OANlB;AASE,MAAA,KAAK,EAAE,GATT;AAUE,MAAA,MAAM,EAAE,GAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAeG;AAAS,MAAA,SAAS,EAAC,4DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,KAAK,EAAE,KAAKnF,KAAL,CAAW2B,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKD,aAApD;AAAmE,MAAA,SAAS,EAAE,KAAKU,YAAnF;AAAiG,MAAA,EAAE,EAAC,mBAApG;AAAwH,MAAA,IAAI,EAAC,MAA7H;AAAoI,MAAA,SAAS,EAAC,OAA9I;AAAsJ,MAAA,WAAW,EAAC,eAAlK;AAAkL,qBAAY,mBAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAO,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAW6B,WAAzB;AAAsC,MAAA,QAAQ,EAAE,KAAKD,mBAArD;AAA0E,MAAA,SAAS,EAAE,KAAKQ,YAA1F;AAAwG,MAAA,EAAE,EAAC,mBAA3G;AAA+H,MAAA,IAAI,EAAC,MAApI;AAA2I,MAAA,SAAS,EAAC,OAArJ;AAA6J,MAAA,WAAW,EAAC,aAAzK;AAAuL,qBAAY,mBAAnM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,eAGC;AAAO,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWgC,SAAzB;AAAoC,MAAA,SAAS,EAAE,KAAKI,YAApD;AAAkE,MAAA,EAAE,EAAC,mBAArE;AAAyF,MAAA,IAAI,EAAC,MAA9F;AAAqG,MAAA,SAAS,EAAC,OAA/G;AAAuH,MAAA,WAAW,EAAC,eAAnI;AAAmJ,qBAAY,mBAA/J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAMC;AAAQ,MAAA,OAAO,EAAE,KAAKN,OAAtB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,SAAS,EAAC,YAAvD;AAAoE,qBAAY,oBAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAND,eAOC;AAAQ,MAAA,OAAO,EAAE,KAAKpB,YAAtB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,SAAS,EAAC,YAA5D;AAAyE,qBAAY,oBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPD,CAfH,eA0BE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGsE,WAAW,CAACzC,GAAZ,CAAgB,CAACtC,KAAD,EAAQC,CAAR,KAAc;AAC7B,0BACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,GAAG,EAAG,GAAEA,CAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKkD,WAAL,CAAiBlD,CAAjB,CAAL,CADF,eAEE;AAAI,QAAA,SAAS,EAAC,cAAd;AAA6B,uBAAc,SAAQA,CAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACsC,GAAN,CAAU,CAACC,IAAD,EAAO4C,KAAP,KAAiB;AAC1B,4BAAO;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAiC,UAAA,GAAG,EAAG,GAAElF,CAAE,GAAEkF,KAAM,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACL;AAAK,UAAA,SAAS,EAAC,0DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAS,UAAA,SAAS,EAAC,gEAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAQ5C,IAAI,CAAC3C,IAAb,CADF,eAEE;AAAS,UAAA,SAAS,EAAC,6DAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4B2C,IAAI,CAACN,MAAjC,CADA,eAEA;AAAM,UAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BM,IAAI,CAACL,UAAL,CAAgBwC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAA7B,CAFA,CAFF,CADA,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKzD,OAAL,CAAasB,IAAI,CAAC3C,IAAlB,CAAvB;AAAgD,UAAA,SAAS,EAAC,sBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADA,EAIG,KAAKG,KAAL,CAAWc,QAAX,IAAuB,KAAKK,UAAL,EAJ1B,eAME;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKmB,IAAL,CAAUE,IAAI,CAAC3C,IAAf,CAAvB;AAA6C,UAAA,SAAS,EAAC,sBAAvD;AAA+E,UAAA,QAAQ,EAAE2C,IAAI,CAAC5B,KAAL,IAAc,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CANF,eASE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK6B,OAAL,CAAaD,IAAI,CAAC3C,IAAlB,CAAvB;AAAgD,UAAA,SAAS,EAAC,sBAA1D;AAAkF,UAAA,QAAQ,EAAE2C,IAAI,CAAC5B,KAAL,IAAc,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CATF,eAYE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK8B,MAAL,CAAYF,IAAI,CAAC3C,IAAjB,CAAvB;AAA+C,UAAA,SAAS,EAAC,uBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAZF,CARF,CADK,CAAP;AA2BD,OA5BA,CADH,CAFF,CADF,CADF;AAsCD,KAvCA,CADH,CA1BF,CAFF;AAyED;;AA7YgD","sourcesContent":["import React, {Component } from \"react\";\nimport \"./index.css\";\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n\n\n\n\nexport default class KanbanBoard extends Component {\n  constructor() {\n    super();\n    // Each task is uniquely identified by its name. \n    // Therefore, when you perform any operation on tasks, make sure you pick tasks by names (primary key) instead of any kind of index or any other attribute.\n\n    this.state = {\n      \n      tasks: [],\n      inputValue: '',\n      courseInput: '',\n      dateInput: '',\n      calendarDate: new Date(),\n      count: 0,\n\n      changeTask: '', \n      showForm: false,\n      chosenColumn: 'task_name'\n      \n\n      \n    };\n    this.stagesNames = ['Backlog', 'To Do', 'Ongoing','Review'];\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n\n    this.getMerchant();\n    \n   \n    \n  }\n\n  async getMerchant() {\n    const datafiles = [];\n    await fetch('http://localhost:3001')\n      .then(response => {\n        // alert(response.tid);\n        return response.text();\n      })\n      .then(data => { \n        const obj = JSON.parse(data);\n        for (let i =0; i < Object.keys(obj).length; i++) {\n            \n          datafiles.push({\n            tid: obj[i].tid,\n            name: obj[i].task_name,\n            course: obj[i].course,\n            chosenDate: obj[i].due_date,\n            stage: obj[i].stage,\n            \n\n          }); \n        // alert(obj[i].tid);\n      \n          };\n\n          this.setState({tasks: datafiles});\n\n      });\n  }\n\n  \n\n  \n\n  async createMerchant(name, course, due_date) {\n    // let name = prompt('Enter task name');\n    // let course = prompt('Enter task course');\n    // let due_date = prompt('Enter task due date');\n    const stage = 0;\n    await fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, course, due_date,stage}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      this.setState({ tasks: this.state.tasks });\n\n      window.location.reload();\n    \n      \n      \n  //     .then(data => {\n  //       alert(data);\n  //       this.getMerchant();\n  //     });\n  }\n  async updateStage(id, stage) {\n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id, stage}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      // .then(data => {\n      //   // alert(data);\n      //   this.getMerchant();\n      // });\n      this.setState({ tasks: this.state.tasks });\n      \n      \n\n      // window.location.reload();\n  }\n  async updateTask(id, column, change) {    \n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id, column, change}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      // .then(data => {\n      //   // alert(data);\n      //   this.getMerchant();\n      // });\n      this.setState({ tasks: this.state.tasks });\n      \n      \n\n      // window.location.reload();\n  }\n\n  confirmUpdates = (name) => {\n    let idToUpdate;\n    let _tasks = this.state.tasks;\n    for (let i =0; i < Object.keys(_tasks).length; i++) {\n      if (_tasks[i].name = name) {\n        idToUpdate = _tasks[i].tid;\n        this.updateTask(idToUpdate, this.state.chosenColumn, this.state.changeTask);\n        this.saveProgress(_tasks[i].id, _tasks[i].stage);\n        this.setState({ tasks: _tasks, chosenColumn:'', changeTask: 'task_name', showForm: false });  \n      }\n    }\n      window.location.reload();\n  }\n\n  onClick = (name) => {\n    // On click we change our state â€“ this will trigger our `render` method\n    if(this.state.showForm){\n      this.setState({ showForm: false });\n    }\n    else {\n    this.setState({ showForm: true });\n    }\n}\n\nrenderForm = () => {\n   return (\n       <div className=\"mt-50 layout-column\"> \n        <form onSubmit={this.onFormSubmit}>\n        <label>\n          <p>What to change</p>\n          <select value={this.state.chosenColumn} onChange={this.handleEdit}>\n            <option value=\"task_name\">Task name</option>\n            <option value=\"course\">Course</option>\n            <option value=\"due_date\">Due date</option> \n          </select>\n        </label>\n      </form>\n     \n         <input value={this.state.changeTask} onChange={this.onEditTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n         {this.state.chosenColumn} \n         {this.state.changeTask} \n         <button onClick={this.confirmUpdates} type=\"submit\" className=\"addthetask\" data-testid=\"update-task-button\">Confirm changes</button>\n\n      </div>\n   );\n}\n    async deleteMerchant(id) {\n      \n    await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE',\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        // alert(data);\n        this.getMerchant();\n      });\n\n      // window.location.reload();\n  }\n\n  handleChange(date) {\n    this.setState({\n      calendarDate: date.toISOString().split('T')[0],\n      dateInput: date.toISOString().split('T')[0].toString()\n    })\n     \n  }\n\n  handleEdit(event) {\n    this.setState({chosenColumn: event.target.value});\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.chosenDate)\n    \n  }\n  \n  onEditTask = (e) => {\n    this.setState({\n      changeTask: e.target.value\n    })\n\n  }\n  onInputChange = (e) => {\n    this.setState({\n      inputValue: e.target.value\n    })\n  }\n  \n  onCourseInputChange = (e) => {\n    this.setState({\n      courseInput: e.target.value\n    })\n  }\n  addTask = () => {\n    if (this.state.inputValue) {\n      const _tasks = this.state.tasks;\n      this.createMerchant(this.state.inputValue, this.state.courseInput, this.state.dateInput);\n      _tasks.push({ name: this.state.inputValue, course: this.state.courseInput, chosenDate: this.state.dateInput,  stage: 0 });\n     \n      \n      this.setState({ tasks: _tasks, inputValue:'' });\n      this.setState({ tasks: _tasks, courseInput:'' });\n      this.setState({ tasks: _tasks, dateInput:'' });\n\n   \n      \n    }\n    \n  }\n\n  enterAddTask = (e) => {\n    if (e.key === 'Enter') {\n      this.addTask()\n    }\n  }\n  back = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return {tid: task.tid, name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 0 ? 0 : task.stage -1  };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  forward = (name) => {\n    let _tasks = this.state.tasks;\n    _tasks = _tasks.map((task) => {\n      if (task.name == name) return { tid: task.tid, name: task.name, course: task.course,chosenDate: task.chosenDate, stage: task.stage == 3 ? 3 : task.stage +1  };\n      else return task;\n    });\n\n    this.setState({ tasks: _tasks });\n  }\n\n  remove = (name) => {\n     // Find id where name is part of id\n     let _tasks = this.state.tasks;\n     let idToDelete = 0;\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n      if (_tasks[i].name = name) {\n        idToDelete = _tasks[i].tid;\n        console.log(_tasks[i].name);\n        console.log(_tasks[i].tid);\n        _tasks.splice(i, 1);\n         this.deleteMerchant(idToDelete);\n         this.setState({ tasks: _tasks });\n         \n      }\n     \n   };\n   \n    \n  }\n  \n\n  saveProgress = () => {\n    let _tasks = this.state.tasks;\n\n     for (let i =0; i < Object.keys(_tasks).length; i++) {\n        this.updateStage(_tasks[i].tid, _tasks[i].stage);\n        console.log(_tasks[i].tid);\n        console.log(_tasks[i].name);\n      };\n      this.setState({ tasks: _tasks });\n  \n\n\n  }\n\n  render() {\n    const { tasks } = this.state;\n    let stagesTasks = [];\n    for (let i = 0; i < this.stagesNames.length; i++) {\n      stagesTasks.push([]);\n    }\n    for (let task of tasks) {\n      const stageId = task.stage;\n      stagesTasks[stageId].push(task);\n      \n    }\n    \n    \n   \n    return (\n      \n      <div className=\"mt-20 layout-column justify-content-center align-items-center\">\n        <section className=\"deadlineCal\">\n          <InfiniteCalendar\n\n            selected={ this.state.calendarDate }\n            onSelect={ this.handleChange }\n            locale={{\n            weekStartsOn: 1}}\n            displayOptions={{\n            layout: 'landscape'\n            }}\n            width={800}\n            height={200}\n          />\n         </section>\n         <section className=\"mt-50 layout-row align-items-center justify-content-center\">\n          <input value={this.state.inputValue} onChange={this.onInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"New task name\" data-testid=\"create-task-input\" />\n          <input value={this.state.courseInput} onChange={this.onCourseInputChange} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Course code\" data-testid=\"create-task-input\" />\n          <input value={this.state.dateInput} onKeyDown={this.enterAddTask} id=\"create-task-input\" type=\"text\" className=\"large\" placeholder=\"Deadline date\" data-testid=\"create-task-input\" />\n\n        \n          <button onClick={this.addTask} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Create task</button>\n          <button onClick={this.saveProgress} type=\"submit\" className=\"addthetask\" data-testid=\"create-task-button\">Save progress</button>\n  \n          {/* <button  onClick={this.getMerchant} type=\"submit\" className=\"save-progress\">Delete a task </button> */}\n        </section>\n        <div className=\"mt-50 layout-row\">\n          {stagesTasks.map((tasks, i) => {\n            return (\n              <div className=\"card outlined ml-20 mt-0\" key={`${i}`}>\n                <div className=\"card-text\">\n                  <h4>{this.stagesNames[i]}</h4>\n                  <ul className=\"styled mt-50\" data-testid={`stage-${i}`}>\n                    {tasks.map((task, index) => {\n                      return <li className=\"slide-up-fade-in\" key={`${i}${index}`}>\n                        <div className=\"layout-column justify-content-between align-items-center\">\n                        <section className=\"mt-50 layout-column align-items-center justify-content-center \">\n                          <span >{task.name}</span>\n                          <section className=\"mt-50 layout-row align-items-center justify-content-center \">\n                          <span className=\"taskIcon\">{task.course}</span>\n                          <span className=\"taskIcon2\">{task.chosenDate.split(\"T\")[0]}</span>\n                          </section>\n                        </section>\n                          <div className=\"icons\">\n                          <button onClick={() => this.onClick(task.name)} className=\"icon-only small mx-2\">\n                              <i className=\"material-icons\">settings</i>\n                            </button>\n                            {this.state.showForm && this.renderForm()}\n\n                            <button onClick={() => this.back(task.name)} className=\"icon-only small mx-2\"  disabled={task.stage == 0}>\n                              <i className=\"material-icons\">arrow_back</i>\n                            </button>\n                            <button onClick={() => this.forward(task.name)} className=\"icon-only small mx-2\"  disabled={task.stage == 3}>\n                              <i className=\"material-icons\">arrow_forward</i>\n                            </button>\n                            <button onClick={() => this.remove(task.name)} className=\"icon-only medium mx-2\">\n                              <i className=\"material-icons\">checkmark</i>\n                            </button>\n                          </div>\n                        </div>\n                      </li>\n                    })}\n                  </ul>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}